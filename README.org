#+PREFIX_DOC_ID:23ca609d-f5f7-4cd6-8743-5da9aaa9259a

* Ttl
:PROPERTIES:
:PREFIX_OBJ_ID: 424ba29b-fc23-4060-81d2-4c998c32d175
:PREFIX_OBJ_VERSION: 1504545916
:END:

** What
:PROPERTIES:
:PREFIX_OBJ_ID: 488db892-03a9-477f-aed3-181fb2fca489
:PREFIX_OBJ_VERSION: 1504545916
:END:
   
*** Good
:PROPERTIES:
:PREFIX_OBJ_ID: 077efe34-f508-456e-b9f7-c36afecb8108
:PREFIX_OBJ_VERSION: 1504545916
:END:
The beautiful thing about org-mode is the customizability. 
 - org-agenda
 - org-habit
 - org-capture
 - org-journal
 - org-contacts
 - timetracking
 - tables / spreadsheet
 - org-pomodoro
 - org-wiki
 - org-brain
 - org-present?
 - calendar invites
 - export to html/etc.
 - fold / unfold
 - scheduling with other people
 
Acts as an agenda, outliner, wiki, blog, etc. It's secure because single-user. Easy to backup, etc. The best of all worlds if there is only a single device.

*** Bad
:PROPERTIES:
:PREFIX_OBJ_ID: cd0366de-f75d-42e6-8c50-ad4bef77181e
:PREFIX_OBJ_VERSION: 1504545916
:END:
1) Cannot easily capture web data, pictures, video, clips, etc.
2) Not simple/easy to access over mobile. Though there are mobileorg and orgzly. 
3) Collaboration (though will need to think about security model here)
   - Whether through publishing blog, document
   - Allowing sharing / delegation of tasks
   - Comments 

*** How
:PROPERTIES:
:PREFIX_OBJ_ID: de19db34-4eb9-490c-804f-8fbc31602bda
:PREFIX_OBJ_VERSION: 1504545916
:END:
- Capture
- Schedule the time to do it.

- Goals / things / tasks that want to accomplish
- Countdown the number of days to accomplish 
- Get reminded
- Encouragement from others who have the same goal
- Markdown?
- Sharing / Delegation
- Publish
- Reminder / categorization - groceries, etc based on location
  - Notifications 
    - https://github.com/realtime-framework/WebPushNotifications/blob/master/index.js
    - https://pushcrew.com/pricing/
    - https://gauntface.github.io/simple-push-demo/
    - https://github.com/GoogleChrome/samples/tree/gh-pages/push-messaging-and-notifications
    - https://github.com/web-push-libs/web-push-php
    - https://elixirforum.com/t/what-is-the-simplest-way-to-send-notification-from-elixir-app-to-android-device/6264/4

Object/Item/Task (this is the fundamental unit - could be part of goal or habit)
  - UserId
  - ObjectId
  - GoalId maybe null
  - HabitId maybe null
  - ReferenceId (jira, email, picture, note, outlook, integrations, comments)
  - Attachments
  - Properties (likable, commentable, private, etc)
  - Path - in case there are many subtasks
  - Blob
  - Minimum time needed
  - Time spent
  - Time left
  - State
  - Times deferred

This becomes an adventure in either parsing the document and storing everything as one item. Or having to parse the document itself.

Goals
  - Habit (streak based)
  - Time limit
    - Weekly
    - 40 days (short)
    - 6 months (medium)
    - 1 year (long)
  - Success criteria?
  - Could be suggested
  - Breakdown Items + Time
  - Weekly review
  - Reward
  - Start Date
  - End Date

Interaction
  - Comments
  - Reaction (time, parent, author)

Prioritizer
  - bin-packing based on min-time, deadline, priority
  - Every x-y days
  - Schedule
  - Deadline
  - Priority
  - Prior scheduling that worked and was successful
  - Saves the event and the suggestion

Groups
  - set of users
  - topics
  - interactions

Interaction
  - ObjectId
  - UserId
  - Comments
  - Reaction (time, parent, author)

Journal
  - day
  - rating
  - frequency

Open Times
  - UserId
  - Calendar
  - Scheduling
  - Tags associated with times
  - Enum(Tagged - will schedule with tag, Open)

  - Calendar implementation:
    - user_id + template
    - template:
      - { day, date, time, type={"base", "override"}, tag={"work", "sleep", etc} }
      - {[1-5], nil, [9-17], "base", "work"}
      - {[1-5], nil, [8-830], "base", "commute"}
      - {[1-5], nil, [1630-1730], "base", "commute"}
      - {nil, 2017-07-04, nil, type="override", tag={"offday"}


Tags
  - project (assoc with work)
  - podcast (assoc with any)
  - gardening (assoc with home)
  - woodworking (assoc with home)
  - health (assoc with any)
  - meditation (assoc with home)
  - reading (assoc with any)
  - writing (assoc with any)
  - hiking (assoc with offday)

Context
  - bus
  - home
  - work
  - in transport
  - offday

State:
  - stuck
  - delay
  - 5min
  - done
  - open
  - started

*** Others
:PROPERTIES:
:PREFIX_OBJ_ID: 58b68b71-bd48-4914-b8e3-556c6bffa91e
:PREFIX_OBJ_VERSION: 1504545916
:END:
https://checkvist.com/checklists/627469-name-your-project-and-press-enter
https://workflowy.com/ -- the most mature app
https://www.moo.do -- really nice Google Apps integration
https://checkvist.com/ -- extremely feature rich
https://github.com/novoid/Memacs
https://turtlapp.com/
http://www.makeuseof.com/tag/lightweight-onenote-evernote-alternatives/
https://github.com/scripting/concord
Personal knowledge base:
https://news.ycombinator.com/item?id=8270759
    
  
*** Org-mode for editors
:PROPERTIES:
:PREFIX_OBJ_ID: 1af09e1a-d5ba-446f-a8d5-c4ec09faeb28
:PREFIX_OBJ_VERSION: 1504545916
:END:
https://atom.io/packages/organized - https://github.com/MattFlower/organized
https://github.com/danielmagnussons/orgmode
Msg thread - https://lists.gnu.org/archive/html/emacs-orgmode/2014-10/msg00212.html
https://github.com/ajaxorg/ace/wiki/Creating-or-Extending-an-Edit-Mode


** Workflow
:PROPERTIES:
:PREFIX_OBJ_ID: 600e97e9-6859-4430-8292-1ed4f811bbdc
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Sync
:PROPERTIES:
:PREFIX_OBJ_ID: c58dcd6c-6918-4dd5-ab12-838f938b426a
:PREFIX_OBJ_VERSION: 1504545916
:END:
This will send the entire file over and at high load and high users cause issues. Will need a emacs client to update properties. 

- Have things locally.
- Initial sync
- Server parses and adds uuid's
  - Stores in database so can do scheduling, sharing, making lists for other people
  - Re-exports with additional property information
- No conflict resolution between local/remote copies.
  Should have a time-vector on each element though.
  Pull down any changes from server and use them. Sync to server overwrites the uploads/changes.
- This workflow requires an api:
  - Import/export whole documents (this can be used by emacs and/or the web editor)

*** Collaboration
:PROPERTIES:
:PREFIX_OBJ_ID: 2bf012f3-3f4a-44b3-bbd8-cea4d5d18a00
:PREFIX_OBJ_VERSION: 1504545916
:END:
A simple use case is someone making a list for someone else to do. Grocery list, etc. 
When is something allowed to be delegated? What are the viewing permissions? Are there spaces with permissions/groups instead? 
Commenting then can be on objects as a generic comment service. However, how would the comments be fetched? They would have to have the same permissions as the parent. Don't want the comment service to have to call back to the parent service for permissions. The other option is replicating / synchronizing the permissions over the the comment system. Another option is only have trusted systems call the comment system and never have it public.    
*** Capturing
:PROPERTIES:
:PREFIX_OBJ_ID: 4cc0a3db-0981-49dc-8538-83b1f3305b21
:PREFIX_OBJ_VERSION: 1504545916
:END:
Major issue is capturing images, bookmarks, webpages. 

https://github.com/alphapapa/org-protocol-capture-html has some bookmarklets. 

** DONE MVP1
CLOSED: [2017-09-01 Fri 17:23]
:PROPERTIES:
:PREFIX_OBJ_ID: bcc942f0-8b2d-4b64-a4b3-c2a9369483cf
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** DONE Thoughts on parsing and db schema:
CLOSED: [2017-08-24 Thu 20:59]
:PROPERTIES:
:PREFIX_OBJ_ID: 2a4ef938-1978-44c4-a8ab-f459d6f0992f
:PREFIX_OBJ_VERSION: 1504545916
:END:
  - Can store the entire file and then the tags/headers in separate tables for scheduling
    - If the agenda is modified on web, item state to done, the file needs to be re-written also. Need to keep both in sync.
  - Represent the entire file as an AST and then store it
    - AST table (how to deal with deleted fragments?)
      - doc | [element_paths, uuid1, uuid2, uuid3]  -> export selects and joins all the elements in the path?
        object | [ uuid, uid, gid, content ]
      - how to represent header levels, planning, property, then all the stuff under the header?
      - [header(level=1, uuid=x, planning, property), section(uuid=x, content), header(level=2, uuid=x, planning, property)
      - how to represent a list with tags and without tags?
        - answer: don't. adds complications for now and no point
      - how to collaborate? have another field with users that have access/edit to it? treat each object as a gco
      - associated with a single object - header, planning, properties, section, timelog
      - timelog should have the logbook and the state transitions? or separate tables?
  #+NAME: DBSCHEMA
  - Database schema

     #mix phx.gen.html Things Document documents user_id:references:accounts_users name:string objects:array:uuid:references_things_objects
     mix phx.gen.html Things Document documents user_id:references:accounts_users name:string objects:array:uuid
   
     mix phx.gen.html Things Object objects document_id:references:things_documents path:array:uuid level:integer title:text content:text blob:binary closed:utc_datetime scheduled:utc_datetime deadline:utc_datetime state:string priority:string version:integer defer_count:integer min_time_needed:integer time_spent:integer time_left:integer permissions:integer

     mix phx.gen.html Things Tag tags user_id:references:accounts_users tag:string

     Maybe add a type column to these and call it a day?
     mix phx.gen.html Things Property properties object_id:references:things_objects key:string value:string
     mix phx.gen.html Things Timelog timelogs object_id:references:things_objects key:string value:string
 
     create many to many table things_objects_tags
     create many to many table things_objects_properties

     A document is an array of objects, a header has properties, tags, logbook associated with it, and section. Could also make it more of a tree-like structure, but we're not trying to edit the document, we're trying to get the main parts to do some scheduling and be able to regenerate it.

     An annoying problem is that we want to be able to refresh a document and also reorder or remove any objects. Possible to have a table of UUID's in the document to guarantee order. Another possibility is a many table with reference to document. If objects moved up and down, we would have to update every object. Same for insertion for new objects in the middle of a file. With an array of uuid's, need to just update the array and take care of fragments later. 


      


    - old notes header is essentially an object, but then what is a section? section will be the content of a header
      what about logbook?

    if we want to get a subtree, we also need to put in the path correctly for the subtree
    or can generate subtree - from the doc uuid's

  - how to get a particular ordered subtree of a document?
    we should have a document with a set of uuid's in an order. we need to select up to the last uuid where level = the level we're at
    CREATE EXTENSION pgcrypto; 
    CREATE TABLE contacts(  id UUID PRIMARY KEY DEFAULT gen_random_uuid(), name TEXT, email TEXT);

    snw=# with x (id_list) as ( values (array['bb8f6873-b2f7-4109-a35f-308930e1d57c', '3ccd8a17-0fac-484c-83ab-feacf88c1812', '2eb23b9f-eb9d-40d0-a46a-24c50aa73173'])) select c.* from contacts c, x where cast(id as text) = any (x.id_list) order by array_position(x.id_list, cast( c.id as text));
    id                  |      name       | email 
    --------------------------------------+-----------------+-------
    bb8f6873-b2f7-4109-a35f-308930e1d57c | Geoff Franks    | geoff
    3ccd8a17-0fac-484c-83ab-feacf88c1812 | Dr Nic Williams | drnic
    2eb23b9f-eb9d-40d0-a46a-24c50aa73173 | Jamie Van Dyke  | jamie

  - ttl_dev=# with x (id_list) as ( values (array['ffce2bd3-a4c4-4ea9-98df-e4ebde4452ee','75c3758c-0af9-4f15-a75a-c66a2fbe0299','f3c99da2-f9ef-45d8
-a59d-c2b606be52d6'])) select o.id, o.title from things_objects o, x where cast(id as text) = any (x.id_list) order by array_position(x.id_list
, cast( o.id as text));  
  - with x (id_list) as (select objects from things_documents) select o.id, o.title from things_objects o, x where id = any (x.id_list) order by array_position(x.id_list, o.id );


*** DONE Thoughts on UI Interface
CLOSED: [2017-08-24 Thu 20:59]
:PROPERTIES:
:PREFIX_OBJ_ID: f494f655-5573-480a-8895-8a2a8c500732
:PREFIX_OBJ_VERSION: 1504545916
:END:

- If this is for power-users, it has to be able to integrate with org-mode. To import/export out of text mode, there needs to be a UUID for each element.

- If tasks can be shared / commented / etc. each item will have to be independent. Also, inheritance is important here, probably just from the top-level. 
- How would conflict resolution be handled? Not sure how to merge diffs between different versions except to have a time-clock.

- https://org-web.org/ - is a rudimentary org-web parser
- http://appsonthemove.com/blog/2017/05/25/borg/
- http://www.orgzly.com/help#org7fa55de
- https://www.reddit.com/r/emacs/comments/6r5htr/capturing_short_notes_on_the_go_then_sync_to_org/

  
*** DONE import/export to api.
CLOSED: [2017-08-19 Sat 22:11]
:PROPERTIES:
:PREFIX_OBJ_ID: fbf78824-4608-4eee-b6f6-1799439ba909
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE write a parser (not going to do in elisp since may want non-emacs users)
CLOSED: [2017-08-15 Tue 18:27]
:PROPERTIES:
:PREFIX_OBJ_ID: 4966bcc3-d996-4e17-bfe1-83a2e8b1314f
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE create db schema
CLOSED: [2017-08-13 Sun 15:01]
:PROPERTIES:
:PREFIX_OBJ_ID: d5ee191b-2a55-4f68-97a9-d9f233c7dc14
:PREFIX_OBJ_VERSION: 1504545916
:END:
[[DBSCHEMA]]
**** DONE consolidate sections
CLOSED: [2017-08-13 Sun 15:00]
:PROPERTIES:
:PREFIX_OBJ_ID: 1118528a-2138-4fb4-9edf-747f879abac7
:PREFIX_OBJ_VERSION: 1504545916
:END:
:LOGBOOK:
CLOCK: [2017-08-13 Sun 12:14]--[2017-08-13 Sun 12:39] =>  0:25
CLOCK: [2017-08-13 Sun 11:44]--[2017-08-13 Sun 12:09] =>  0:25
CLOCK: [2017-08-13 Sun 11:14]--[2017-08-13 Sun 11:39] =>  0:25
CLOCK: [2017-08-13 Sun 07:18]--[2017-08-13 Sun 07:44] =>  0:26
CLOCK: [2017-08-13 Sun 06:46]--[2017-08-13 Sun 07:12] =>  0:26
:END:
**** DONE Need to fix the planning parser to grab the dates
CLOSED: [2017-08-13 Sun 15:00]
:PROPERTIES:
:PREFIX_OBJ_ID: e556819d-f6e9-4b69-8883-5597fea84b3d
:PREFIX_OBJ_VERSION: 1504545916
:END:
:LOGBOOK:
CLOCK: [2017-08-13 Sun 12:48]--[2017-08-13 Sun 13:13] =>  0:25
:END:
**** DONE consolidate header (property, planning)
CLOSED: [2017-08-13 Sun 15:00]
:PROPERTIES:
:PREFIX_OBJ_ID: 86ecb3a1-8e38-43f9-8015-2c0bc67b9e74
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE implement db schema
CLOSED: [2017-08-14 Mon 16:44]
:PROPERTIES:
:PREFIX_OBJ_ID: 6ea2dcb2-b50f-450c-ab89-6f19f78e5036
:PREFIX_OBJ_VERSION: 1504545916
:END:
:LOGBOOK:
CLOCK: [2017-08-14 Mon 16:14]--[2017-08-14 Mon 16:39] =>  0:25
CLOCK: [2017-08-14 Mon 15:44]--[2017-08-14 Mon 16:09] =>  0:25
CLOCK: [2017-08-14 Mon 15:09]--[2017-08-14 Mon 15:34] =>  0:25
:END:
**** DONE write to database
CLOSED: [2017-08-15 Tue 21:48]
:PROPERTIES:
:PREFIX_OBJ_ID: 78d373aa-ebc0-41cb-a5a3-b728d7573cbf
:PREFIX_OBJ_VERSION: 1504545916
:END:
:LOGBOOK:
CLOCK: [2017-08-15 Tue 11:13]--[2017-08-15 Tue 11:38] =>  0:25
CLOCK: [2017-08-15 Tue 10:44]--[2017-08-15 Tue 11:09] =>  0:25
CLOCK: [2017-08-15 Tue 10:14]--[2017-08-15 Tue 10:39] =>  0:25
CLOCK: [2017-08-15 Tue 09:44]--[2017-08-15 Tue 10:09] =>  0:25
CLOCK: [2017-08-15 Tue 09:11]--[2017-08-15 Tue 09:36] =>  0:25
CLOCK: [2017-08-14 Mon 19:26]--[2017-08-14 Mon 19:46] =>  0:20
CLOCK: [2017-08-14 Mon 18:57]--[2017-08-14 Mon 19:26] =>  0:29
CLOCK: [2017-08-14 Mon 18:31]--[2017-08-14 Mon 18:56] =>  0:25
CLOCK: [2017-08-14 Mon 18:05]--[2017-08-14 Mon 18:30] =>  0:25
CLOCK: [2017-08-14 Mon 17:13]--[2017-08-14 Mon 17:38] =>  0:25
CLOCK: [2017-08-14 Mon 16:44]--[2017-08-14 Mon 17:10] =>  0:26
:END:
The dates need to be parsed to put into the db
Turns out they are of many variable formats, need to use regexp
The scheduler needs to have a few additional fields in db

After mucking around quite a bit with dates, regret not using a lexer. 
Turns out Ecto casting from naive datetime to datetime was the issue. 

Takes a document, parses it, and can insert all the objects into the database

***** DONE Make it into a function
CLOSED: [2017-08-15 Tue 20:06]
:PROPERTIES:
:PREFIX_OBJ_ID: 0a519045-a15d-4cc9-bdd4-ddab43f85681
:PREFIX_OBJ_VERSION: 1504545916
:END:
      :LOGBOOK:
      CLOCK: [2017-08-15 Tue 19:30]--[2017-08-15 Tue 20:00] =>  0:30
      :END:
***** DONE Make a solid decision on what to do on failed update / version conflict
CLOSED: [2017-08-15 Tue 21:40]
:PROPERTIES:
:PREFIX_OBJ_ID: 4cfec74b-ec3f-4980-80d6-bccacd0d785a
:PREFIX_OBJ_VERSION: 1504545916
:END:
      :LOGBOOK:
      CLOCK: [2017-08-15 Tue 21:00]--[2017-08-15 Tue 21:38] =>  0:38
      CLOCK: [2017-08-15 Tue 20:13]--[2017-08-15 Tue 20:38] =>  0:25
      :END:
***** DONE Parse and cast the dates
CLOSED: [2017-08-15 Tue 18:19]
:PROPERTIES:
:PREFIX_OBJ_ID: f440df0e-a0ad-4301-92bc-75654e324b72
:PREFIX_OBJ_VERSION: 1504545916
:END:
      http://orgmode.org/manual/Timestamps.html#Timestamps

      :LOGBOOK:
      CLOCK: [2017-08-15 Tue 16:55]--[2017-08-15 Tue 18:14] =>  1:19
      CLOCK: [2017-08-15 Tue 16:15]--[2017-08-15 Tue 16:51] =>  0:36
      CLOCK: [2017-08-15 Tue 15:30]--[2017-08-15 Tue 16:11] =>  0:41
      CLOCK: [2017-08-15 Tue 15:04]--[2017-08-15 Tue 15:29] =>  0:25
      CLOCK: [2017-08-15 Tue 13:25]--[2017-08-15 Tue 13:50] =>  0:25
      CLOCK: [2017-08-15 Tue 12:43]--[2017-08-15 Tue 13:25] =>  0:42
      CLOCK: [2017-08-15 Tue 12:16]--[2017-08-15 Tue 12:41] =>  0:25
      CLOCK: [2017-08-15 Tue 11:43]--[2017-08-15 Tue 12:08] =>  0:25
      :END:
***** DONE Or maybe need to do versioning right now?
CLOSED: [2017-08-15 Tue 18:22]
:PROPERTIES:
:PREFIX_OBJ_ID: 5bccb18f-aef7-4f01-85c4-9f6a6d15ba82
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE Need to parse the file metadata
CLOSED: [2017-08-15 Tue 23:18]
:PROPERTIES:
:PREFIX_OBJ_ID: fcf4a9e8-9feb-4072-804f-c47cb71cdf2b
:PREFIX_OBJ_VERSION: 1504545916
:END:
      CLOCK: [2017-08-15 Tue 21:45]--[2017-08-15 Tue 23:20] =>  1:40
written to the database as jsonb
http://ehneilsen.net/notebook/orgExamples/org-examples.html#sec-2

**** DONE regenerate file from database - with uuid's
CLOSED: [2017-08-16 Wed 19:18]
:PROPERTIES:
:PREFIX_OBJ_ID: 54576b3d-e9bd-4c1c-9cf1-d5364acdb83d
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-08-16 Wed 18:45]--[2017-08-16 Wed 19:20] =>  0:35
     CLOCK: [2017-08-16 Wed 18:15]--[2017-08-16 Wed 18:40] =>  0:25
     CLOCK: [2017-08-16 Wed 17:40]--[2017-08-16 Wed 18:15] =>  0:35
     CLOCK: [2017-08-16 Wed 17:10]--[2017-08-16 Wed 17:38] =>  0:28
     CLOCK: [2017-08-16 Wed 16:40]--[2017-08-16 Wed 17:08] =>  0:28
     CLOCK: [2017-08-16 Wed 16:11]--[2017-08-16 Wed 16:36] =>  0:25
     CLOCK: [2017-08-16 Wed 12:03]--[2017-08-16 Wed 12:28] =>  0:25
     CLOCK: [2017-08-16 Wed 11:28]--[2017-08-16 Wed 11:53] =>  0:25
     CLOCK: [2017-08-16 Wed 11:05]--[2017-08-16 Wed 11:20] =>  0:15
     CLOCK: [2017-08-16 Wed 10:36]--[2017-08-16 Wed 11:01] =>  0:25
     CLOCK: [2017-08-16 Wed 08:45]--[2017-08-16 Wed 09:00] =>  0:15
     CLOCK: [2017-08-16 Wed 07:25]--[2017-08-16 Wed 07:43] =>  0:18
     :END:
    - The file uuid goes in the metadata at the top
    - The object metadata goes into properties
    - ttl_dev=# with x (id_list) as (select objects from things_documents) select o.id, o.title from things_objects o, x where id = any (x.id_list) order by array_position(x.id_list, o.id  );
    - ttl_dev=# with x (id_list) as (select objects from things_documents) select o.id, o.title from things_objects o, d.metadata from things_documents d,  x where id = any (x.id_list) order by array_position(x.id_list, o.id  );
    - 
***** DONE adjust the levels for files with no bullets to 0 - this will fix for files with no headline
CLOSED: [2017-08-16 Wed 07:22]
:PROPERTIES:
:PREFIX_OBJ_ID: 6f039ea0-a95f-4b8d-b857-87708bb8c2bb
:PREFIX_OBJ_VERSION: 1504545916
:END:
***** DONE bug with closed planning data not being parsed
CLOSED: [2017-08-16 Wed 07:43]
:PROPERTIES:
:PREFIX_OBJ_ID: 8f3c1ff2-d02c-4da8-87ea-51f64866753c
:PREFIX_OBJ_VERSION: 1504545916
:END:

**** DONE Bugs - adil file has extra newline at start
CLOSED: [2017-08-16 Wed 19:18]
:PROPERTIES:
:PREFIX_OBJ_ID: 889a479b-064b-46ac-830d-440ea34f4754
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE Properties - parse, store, and write
CLOSED: [2017-08-16 Wed 22:59]
:PROPERTIES:
:PREFIX_OBJ_ID: dfffb620-084d-4c5e-bfaf-1a5e71516f97
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-08-16 Wed 21:10]--[2017-08-16 Wed 22:57] =>  1:47
     :END: 
**** DONE Add file uuid into regenerate
CLOSED: [2017-08-16 Wed 23:39]
:PROPERTIES:
:PREFIX_OBJ_ID: 6fbb1440-3b77-4aa6-8c3d-86f1005b6398
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE Add version and id into regenerated object
CLOSED: [2017-08-17 Thu 00:03]
:PROPERTIES:
:PREFIX_OBJ_ID: 3c63d4c0-49a8-4ad0-9434-833e75485a62
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-08-16 Wed 23:39]--[2017-08-17 Thu 00:03] =>  0:24
     :END:
**** DONE Read file uuid from file to pull objects
CLOSED: [2017-08-17 Thu 11:38]
:PROPERTIES:
:PREFIX_OBJ_ID: 069a1c01-f83f-436e-bf83-ab533ef56c7e
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-08-17 Thu 10:00]--[2017-08-17 Thu 10:57] =>  0:57
     CLOCK: [2017-08-17 Thu 08:55]--[2017-08-17 Thu 09:20] =>  0:25
     CLOCK: [2017-08-17 Thu 08:05]--[2017-08-17 Thu 08:50] =>  0:45
     :END:
**** DONE Start of file exception
CLOSED: [2017-08-17 Thu 11:38]
:PROPERTIES:
:PREFIX_OBJ_ID: 76354c5f-ab9d-47c0-a650-27e9819e0a63
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-08-17 Thu 11:04]--[2017-08-17 Thu 11:29] =>  0:25
     :END:
**** DONE Ensure data gets updated on change
CLOSED: [2017-08-17 Thu 13:05]
:PROPERTIES:
:PREFIX_OBJ_ID: c406a88d-5a92-48a0-a840-979497d5609c
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-08-17 Thu 12:58]--[2017-08-17 Thu 13:06] =>  0:08
     :END:
      Org-mode won't ever update the version locally. If remote_version > local_version => conflict.
      Conflict resolution will require parsing things locally and replacing them
      Tests:
       - An old object (all db counts same)
       - A new object gets added (db count + 1)
       - the new object gets modified (db count same)

**** DONE make an interval data structure for schedule parsing and bin-packing calendar with contexts / tags
CLOSED: [2017-08-17 Thu 17:53]
:PROPERTIES:
:PREFIX_OBJ_ID: 43ef17aa-b3f3-42ce-998a-e71e45da294b
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-08-19 Sat 11:12]--[2017-08-19 Sat 11:37] =>  0:25
     CLOCK: [2017-08-19 Sat 10:37]--[2017-08-19 Sat 11:02] =>  0:25
     CLOCK: [2017-08-17 Thu 13:42]--[2017-08-17 Thu 14:07] =>  0:25
     :END:
Time can be tagged with multiple contexts. So an interval of time can be tagged work, etc. 
org-mode also has intervals which need to be stored for scheduled time and repetition. 
      CLOSED: [2016-06-02 Thu 21:22] SCHEDULED: <2016-06-08 Wed 09:00+x>--<2016-06-02 9:00-17:00> DEADLINE: <bla>

The agenda display is not important in this case, the api output will need to be generated anyway. 
Easiest format for a single day would be {start_time, interval_size}. This allows for packing things into whatever interval_size available. 
The end times for org-document generation will need to be calculated.  
For the issue of "scheduled" over multiple days, it will need to become a list. [{start_time1, interval1}, {start_time2, interval2}] and repeat_interval
In the db - not sure how to store this? another jsonb?
Use two arrays - one for start time, the other for interval. 
Other option - just have a planning table. 
select * from objects o, planning p where o.id = p.object_id and p.scheduled > $p1 and p.scheduled < $p2 

UPDATE - just going with start_time, start_interval, date_range

     mix phx.gen.html Things Object objects document_id:references:things_documents path:array:uuid level:integer title:text content:text blob:binary state:string priority:string version:integer defer_count:integer min_time_needed:integer time_spent:integer time_left:integer permissions:integer
     mix phx.gen.html Things Planning planning object_id:references:things_objects repeat_interval:string closed:utc_datetime scheduled:utc_datetime scheduled_date_range:integer scheduled_time_interval:integer deadline:utc_datetime 
     mix phx.gen.html Things Property properties object_id:references:things_objects key:string value:string
     mix phx.gen.html Things Timelog timelogs object_id:references:things_objects key:string value:string

Workflow:
Server sees free time. Sorts by priority + tag matching on time slot + longest first? Need to optimize algorithm based on actual results. 
Yes/no -> deferred -> repeat.  
Or set out a full schedule at night. 
Data structure is fine. 
However, need ability to defer scheduled tasks and logging.


**** DONE Parse the schedule properly into the interval structure
CLOSED: [2017-08-19 Sat 17:53]
:PROPERTIES:
:PREFIX_OBJ_ID: 04c7f3f9-33ef-4694-a684-3c70099df52c
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-08-17 Thu 18:55]--[2017-08-17 Thu 19:20] =>  0:25
     CLOCK: [2017-08-17 Thu 18:25]--[2017-08-17 Thu 18:50] =>  0:25
     CLOCK: [2017-08-17 Thu 17:53]--[2017-08-17 Thu 18:20] =>  0:27
     :END:
Current state - schedule start_date parsing has been done. End_date, duration, repeat_interval remain. Data structure needs put into schema and then populated.

 
**** DONE Bugs parsing schedule time interval + repeat - is this done later?
CLOSED: [2017-08-19 Sat 17:53]
:PROPERTIES:
:PREFIX_OBJ_ID: a7947ab8-987e-45da-a8d8-f29b3395ea94
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE Bugs regeneration date format should be the same
CLOSED: [2017-08-19 Sat 22:07]
:PROPERTIES:
:PREFIX_OBJ_ID: a3489e02-49f8-4bde-8fbb-157fe4464e94
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE Parse or skip logbook
CLOSED: [2017-08-19 Sat 22:07]
:PROPERTIES:
:PREFIX_OBJ_ID: 23d3c239-e8fd-43aa-b1a7-c39745754d10
:PREFIX_OBJ_VERSION: 1504545916
:END:
      - probably a separate table. Same as tags. Did insert_all with ecto which may complicate this implementation
*** DONE Cleanup
CLOSED: [2017-09-01 Fri 17:51]
:PROPERTIES:
:PREFIX_OBJ_ID: 27f614ae-92a2-4d1c-be3b-9be9d0e2bdf5
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE Refactor parse
CLOSED: [2017-09-01 Fri 17:23] SCHEDULED: <2017-08-24 Thu 18:00-20:00> DEADLINE: <2017-08-24 Thu 21:00>
:PROPERTIES:
:PREFIX_OBJ_ID: 059e8cb6-74ae-43cf-b284-4d2bd75d5bac
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-08-24 Thu 17:30]--[2017-08-24 Thu 20:49] =>  3:19
     :END:
**** use ecto.multi or control the dual commit transaction
:PROPERTIES:
:PREFIX_OBJ_ID: 0f791bbe-106a-4356-a988-d8efdc9c4ff5
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** DONE POC - display UI for agenda
:PROPERTIES:
:PREFIX_OBJ_ID: 8abad6f5-821d-41aa-b554-a0b7b4470c50
:PREFIX_OBJ_VERSION: 1504545916
:END:
   :LOGBOOK:
   CLOCK: [2017-09-01 Fri 00:00]--[2017-09-01 Fri 23:59] => 23:59
   :END:
    CLOSED: [2017-09-01 Fri 10:17]
Not sure which is more important to do first. Capturing, offline support, notifications, logging activities. Notifications are fairly straightforward. Capture and offline support will need to come by building out a service worker for a progressive web app (pwa) . Looks like a lot more functionality will end up moving into the client. 

The server will contain the documents and the items stored in kinto db. 
The client will sync proxy auth through the server to make things consistent.
Client downloads entire documents and has all the data now.
  - capture
  - display the agenda
    - schedule / reschedule
    - mark as done
    - logging time / journal
    - import/export back to org-mode
  - most important tasks

  - https://www.realsimple.com/home-organizing/organizing/bullet-journal
  - http://help.bulletjournal.com/category/5-bullet-journaling-101
  - https://news.ycombinator.com/item?id=11856987
  - http://talk.dynalist.io/t/switching-to-dynalist-from-workflowy-and-todoist/475
  - memex - what did you do on what day
  - reminder to journal
**** PWA
:PROPERTIES:
:PREFIX_OBJ_ID: 12840c0e-104e-4a2c-8d45-3dab79205d7e
:PREFIX_OBJ_VERSION: 1504545916
:END:

Looks like an app-shell needs to be implemented and workboxjs seems to be the newest gold standard. 

Workflow:

Desires:
- communication over websocket
- little to no api if not required
- works offline

- Agenda shell
  - This is a rendered html page without data
  - Has some authorization info locally? 
  - Fetches from local to display immediately 
  - Fetches from remote to sync
    - update cache
    - and then redisplay on update

https://elixirforum.com/t/tips-for-building-resilient-frontend-apps-which-use-phoenix-channels-for-backend-communication/6216/15
https://www.viget.com/articles/phoenix-and-react-a-killer-combo
https://unpoly.com/
https://github.com/hyperapp/hyperapp


https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/

https://hnpwa.com/

https://github.com/Kinto/kinto/wiki/Brainstorm-rationale

Should probably take a PWA style working model and modify it:
https://github.com/SimonDEvans/notes

https://serviceworke.rs/
https://workboxjs.org/
https://nolanlawson.github.io/fronteers-2016/#/51
https://github.com/turbolinks/turbolinks
https://github.com/GoogleChrome/workbox
https://github.com/GoogleChrome/voice-memos
https://github.com/jakearchibald/trained-to-thrill/

**** Drab
:PROPERTIES:
:PREFIX_OBJ_ID: 3390425a-2741-4544-a626-4cdb4fded538
:PREFIX_OBJ_VERSION: 1504545916
:END:
Spent a few hours off and on investigating Drab. Server-side dom modifications is nice, but not sure how to deal with offline. Will have to build custom sync mechanism. 
**** Clojurescript
:PROPERTIES:
:PREFIX_OBJ_ID: a532981f-0e7e-4d36-91a6-6c94abf5d9b1
:PREFIX_OBJ_VERSION: 1504545916
:END:
Want to use. Community is small compared to others though.

We'd have to make the externs for kinto. 
https://github.com/cljsjs

However, before doing anything with clojurescript get something working with javascript.
https://github.com/andreloureiro/andrel.me/blob/master/_posts/2016-01-09-a-basic-service-worker-implementation.md

Figwheel is pretty awesome. 

https://github.com/gadfly361/cljs-todomvc
https://github.com/tel/oak 

**** Kinto
:PROPERTIES:
:PREFIX_OBJ_ID: 64d9a65e-a2c2-4cc9-a1a4-ae87f9cdb92f
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-08-30 Wed 19:00]--[2017-08-30 Wed 23:48] =>  4:48
     :END:

Kinto philosophy and architecture fits better. 

Comparison with Pouchdb and others:
http://www.servicedenuages.fr/en/generic-storage-ecosystem#storage-specs
http://docs.kinto-storage.org/en/stable/faq.html#comparison

Only other choice for offline storage was pouchdb, however, the cons are:
  - This will then require a db per user and the sharing of objects isn't possible easily anymore.
  - The permissioning requires a gateway from cloudant or etc. and going down that rabbithole. 

Close to the same data schema is possible with documents moving to a "collection" and all the objects into the "records". Groups, permissions, sharing out of the box. Possible performance issues on large datasets, but very unlikely. Fairly robust permissions for grouping:
http://docs.kinto-storage.org/en/stable/tutorials/permission-setups.html

***** Kinto setup
:PROPERTIES:
:PREFIX_OBJ_ID: ade4a1f9-fa02-4771-bbe6-c519be37b7a6
:PREFIX_OBJ_VERSION: 1504545916
:END:
Using docker image:
#!/bin/sh
docker run --rm --name  kinto --env-file ./kinto.env -p 8888:8888 kinto/kinto-server

$ cat kinto.env 
KINTO_STORAGE_BACKEND=kinto.core.storage.postgresql
KINTO_STORAGE_URL=postgres://postgres:postgres@10.0.2.99/kinto
MULTIAUTH_POLICIES=basicauth
KINTO_EXPERIMENTAL_PERMISSIONS_ENDPOINT=true
KINTO_PERMISSION_BACKEND=kinto.core.permission.postgresql
KINTO_PERMISSION_URL=postgres://postgres:postgres@10.0.2.99/kinto

***** Kinto schema - export doc
:PROPERTIES:
:PREFIX_OBJ_ID: 2c16fe72-d853-4f88-a621-aa680e81cb37
:PREFIX_OBJ_VERSION: 1504545916
:END:
Trying to generate a document will have the multi-commit issue as before:

#+BEGIN_SRC shell :results output
#echo '{"data": {"description": "emacs", "status": "TODO", "title": "emacs", "content": "some crazy content 2", "level": 2, "priority": null, "state": "", "properties": [], "completed": false }}' | http POST http://localhost:8888/v1/buckets/default/collections/newdoc/records --auth user1:pass1
#http GET http://localhost:8888/v1/buckets/default/collections/newdoc/records --auth something:something
echo '{"data": {"description": "emacs", "status": "TODO", "title": "emacs", "content": "some crazy content 2", "level": 2, "priority": null, "state": "", "properties": [], "completed": false }}' | http POST http://localhost:8888/v1/buckets/default/collections/newdoc/records --auth something:something

#+END_SRC

#+RESULTS:
: {"data":[{"properties":[],"id":"80c6d50c-7489-4493-9d32-2e513e0874ed","priority":null,"status":"TODO","level":2,"content":"some crazy content 2","completed":false,"title":"emacs","state":"","description":"emacs","last_modified":1504404010451},{"id":"2f0159f4-af8d-4950-b118-0c013b4a90d7","description":"emacs","last_modified":1504403945540}]}

#+BEGIN_SRC shell :results output
echo '{"data": {"description": "emacs", "status": "TODO", "title": "emacs", "content": "some crazy content 2", "level": 2, "priority": null, "state": "", "properties": [], "completed": false }}' | 
    http POST http://localhost:8888/v1/buckets/default/collections/tasks/records --auth user2:pass2
#+END_SRC

#+RESULTS:
: {"permissions":{"write":["basicauth:344805ac2a747906f79c7b1246cc1a5f15c1ebaffed6ca0bba111c3ec9defebf"]},"data":{"id":"c9cdc6e4-71a9-4756-85b1-365c2688526f","completed":false,"title":"emacs","level":2,"priority":null,"status":"TODO","state":"","content":"some crazy content 2","description":"emacs","properties":[],"last_modified":1504299805753}}

#+BEGIN_SRC shell :results output
    #http GET http://localhost:8888/v1/buckets/default/collections/tasks --auth user3:pass3
    http GET http://localhost:8888/v1/buckets/default/collections --auth user1:pass1
#+END_SRC

#+RESULTS:
: {"data":[{"id":"newdoc","last_modified":1504300871014},{"id":"tasks","order":["7ca72a3e-afe7-452e-a2ba-2dfa02a3d01c","0d37d5f1-4d44-443b-a546-52c6e15d8f0c"],"last_modified":1504135779282}]}

#+BEGIN_SRC shell :results output
    http GET http://localhost:8888/v1/buckets/default/collections/tasks/records --auth user1:pass1
#+END_SRC

#+RESULTS:
: {"data":[{"id":"981f166f-f033-4826-93eb-b5c3dc385815","title":"emacs","priority":null,"level":2,"status":"TODO","description":"emacs","state":"","properties":[],"content":"some crazy content 2","last_modified":1504138324556},{"id":"4e9dc027-45d1-4c48-8fe7-54d0af328d68","title":"emacs","priority":null,"level":1,"status":"TODO","description":"emacs","state":"","properties":[],"content":"some crazy content","last_modified":1504138145187},{"id":"53f9cdd5-fcd3-4699-924b-4d68067b25df","last_modified":1504138066386},{"id":"afea9854-508b-42a5-b490-0c23eed2d42b","level":1,"status":"todo","description":"user1 data try4","last_updated":"2017-08-30T08:30:00","last_modified":1504138038761},{"id":"9b6d746d-2e92-444c-93cb-56ebf28354d2","last_modified":1504138024204},{"id":"8bad1995-1585-422d-a712-eb7bc8a011b7","level":1,"status":"todo","description":"user1 data try3","last_updated":"2017-08-30T08:30:00","last_modified":1504137990660},{"id":"0348491e-a1dc-4470-9f0a-97bd6d17f338","last_modified":1504137897503},{"id":"aa867294-471b-4f78-bc1a-d5de45c3716e","last_modified":1504137845531},{"id":"a8e4c8fa-6315-4a56-b52e-39363bc1eba9","last_modified":1504137742919},{"id":"7e21c027-e2e3-4e09-806c-8846f9635a60","last_modified":1504137734302},{"id":"a11c5585-36f4-438e-979a-4b96111c81ff","last_modified":1504137676441},{"id":"0d37d5f1-4d44-443b-a546-52c6e15d8f0c","level":1,"status":"todo","description":"user1 data try2","last_updated":"2017-08-30T08:30:00","last_modified":1504135413068},{"id":"7ca72a3e-afe7-452e-a2ba-2dfa02a3d01c","level":1,"status":"todo","description":"user1 data","last_updated":"2017-08-30T08:30:00","last_modified":1504131793546}]}

#+BEGIN_SRC shell :results output
#    http GET http://localhost:8888/v1/buckets --auth user3:pass3 # 6f0b5857-7aaa-da44-f0bb-648c6619f5f1 is the bucket for user3:pass3
#    http GET http://localhost:8888/v1/buckets --auth user2:pass2 #  f1abf618-c58c-1496-5274-b7e8be8a259b is the bucket for user3:pass3
#     echo '{"permissions": {"read": ["basicauth:7fc2f542fc5a66bcbcb45bea54ec43c5db5020a03286ebb84dbb120ef66b2a39"]}}' | http PATCH http://localhost:8888/v1/buckets/default/collections/tasks/records/90dbf30d-1d5e-4874-8878-8ffcc67e8ffb -v --auth 'user2:pass2' # grant perms from user2 to user3 for record
  
    #http GET http://localhost:8888/v1/buckets/default/collections/tasks/records --auth user2:pass2
   # http GET http://localhost:8888/v1/buckets/default/collections/tasks/records --auth user3:pass3
#+END_SRC

#+RESULTS:
: {"data":[{"id":"683ea5c7-645b-4236-9f2f-48ec3b1542d9","completed":false,"title":"new item","last_modified":1504297795367},{"id":"8ad85f69-5056-47dc-9fdb-6fb473fc67e3","completed":false,"title":"New again","last_modified":1504286396202},{"id":"09c5b364-f358-41ff-b7f3-2fcb9470511a","completed":false,"title":"what","last_modified":1504273413555}]}

It worked, the perms table has:
 /buckets/6f0b5857-7aaa-da44-f0bb-648c6619f5f1                                                                | write      | basicauth:7fc2f542fc5a66bcbcb45bea54ec43c5db5020a03286ebb84dbb120ef66b2a39
 /buckets/6f0b5857-7aaa-da44-f0bb-648c6619f5f1/collections/tasks                                              | write      | basicauth:7fc2f542fc5a66bcbcb45bea54ec43c5db5020a03286ebb84dbb120ef66b2a39
 /buckets/6f0b5857-7aaa-da44-f0bb-648c6619f5f1/collections/tasks/records/09c5b364-f358-41ff-b7f3-2fcb9470511a | write      | basicauth:7fc2f542fc5a66bcbcb45bea54ec43c5db5020a03286ebb84dbb120ef66b2a39
 /buckets/6f0b5857-7aaa-da44-f0bb-648c6619f5f1/collections/tasks/records/8ad85f69-5056-47dc-9fdb-6fb473fc67e3 | write      | basicauth:7fc2f542fc5a66bcbcb45bea54ec43c5db5020a03286ebb84dbb120ef66b2a39
 /buckets/6f0b5857-7aaa-da44-f0bb-648c6619f5f1/collections/tasks/records/683ea5c7-645b-4236-9f2f-48ec3b1542d9 | write      | basicauth:7fc2f542fc5a66bcbcb45bea54ec43c5db5020a03286ebb84dbb120ef66b2a39
 /buckets/f1abf618-c58c-1496-5274-b7e8be8a259b/collections/tasks/records/90dbf30d-1d5e-4874-8878-8ffcc67e8ffb | read       | basicauth:7fc2f542fc5a66bcbcb45bea54ec43c5db5020a03286ebb84dbb120ef66b2a39

#+BEGIN_SRC shell :results output
#    http GET http://localhost:8888/v1/buckets/default/collections/tasks/records --auth user3:pass3
    http GET http://localhost:8888/v1/buckets/f1abf618-c58c-1496-5274-b7e8be8a259b/collections/tasks/records --auth user3:pass3
#+END_SRC

#+RESULTS:
: {"data":[{"id":"c9cdc6e4-71a9-4756-85b1-365c2688526f","completed":false,"title":"emacs","priority":null,"level":2,"status":"TODO","description":"emacs","state":"","properties":[],"content":"some crazy content 2","last_modified":1504299805753},{"id":"90dbf30d-1d5e-4874-8878-8ffcc67e8ffb","level":1,"status":"todo","description":"test1","last_updated":"2017-08-30T08:30:00","last_modified":1504298161138}]}

Trying to set perms on the collection tasks
#+BEGIN_SRC shell :results output
     echo '{"permissions": {"read": ["basicauth:7fc2f542fc5a66bcbcb45bea54ec43c5db5020a03286ebb84dbb120ef66b2a39"]}}' | http PATCH http://localhost:8888/v1/buckets/default/collections/tasks -v --auth 'user2:pass2' # grant perms from user2 to user3 for collection
  
    #http GET http://localhost:8888/v1/buckets/default/collections/tasks/records --auth user2:pass2
   # http GET http://localhost:8888/v1/buckets/default/collections/tasks/records --auth user3:pass3
#+END_SRC

#+RESULTS:
#+begin_example
PATCH /v1/buckets/default/collections/tasks HTTP/1.1
Content-Length: 106
Accept-Encoding: gzip, deflate
Host: localhost:8888
Accept: application/json
User-Agent: HTTPie/0.9.2
Connection: keep-alive
Content-Type: application/json
Authorization: Basic dXNlcjI6cGFzczI=

{"permissions": {"read": ["basicauth:7fc2f542fc5a66bcbcb45bea54ec43c5db5020a03286ebb84dbb120ef66b2a39"]}}


HTTP/1.1 200 OK
Access-Control-Expose-Headers: Retry-After, Alert, Backoff, Content-Length
Content-Length: 242
Content-Type: application/json
Date: Fri, 01 Sep 2017 21:05:06 GMT
Etag: "1504299906940"
Last-Modified: Fri, 01 Sep 2017 21:05:06 GMT
Server: waitress
X-Content-Type-Options: nosniff

{"permissions":{"write":["basicauth:344805ac2a747906f79c7b1246cc1a5f15c1ebaffed6ca0bba111c3ec9defebf"],"read":["basicauth:7fc2f542fc5a66bcbcb45bea54ec43c5db5020a03286ebb84dbb120ef66b2a39"]},"data":{"id":"tasks","last_modified":1504299906940}}
#+end_example

***** Kinto schema - How to generate the agendas
:PROPERTIES:
:PREFIX_OBJ_ID: 6b8d5efe-fbb9-4ba0-b5d1-acb56990a628
:PREFIX_OBJ_VERSION: 1504545916
:END:
http://docs.kinto-storage.org/en/stable/api/1.x/filtering.html

#+BEGIN_SRC shell :results output
    http GET "http://localhost:8888/v1/buckets/default/collections/tasks/records?gt_level=1&status=TODO" --auth user1:pass1
#+END_SRC

#+RESULTS:
: {"data":[{"status":"TODO","state":"","id":"981f166f-f033-4826-93eb-b5c3dc385815","priority":null,"properties":[],"description":"emacs","level":2,"title":"emacs","content":"some crazy content 2","last_modified":1504138324556}]}

***** Kinto permissions
:PROPERTIES:
:PREFIX_OBJ_ID: 2dc92910-b813-4acf-ac24-8c6dfeee31ea
:PREFIX_OBJ_VERSION: 1504545916
:END:
Synchronization happens at a bucket level. Each user has a default bucket which they sync automatically. Everything after that for 
  - tasks = new Kinto(remotedb).collection("tasks"), tasks.sync(syncOptions)
Separately need to fetch from different buckets. 

Operates on the bucket + records level . 
Can set sharing permission at the bucket, collection, or record level. Fetching anything of interest, however, is a completely different problem.

**** Todo app examples with Kinto
:PROPERTIES:
:PREFIX_OBJ_ID: 28289a40-eea2-411e-9c06-7d7f40de5f4e
:PREFIX_OBJ_VERSION: 1504545916
:END:
file:///home/tjheeta/repos/self/all-todo-test/kinto.js/demo/index.html
https://github.com/Kinto/kinto/wiki/App-examples
http://leplatrem.github.io/kinto-demo-calendar/#public
https://github.com/leplatrem/kinto-demo-calendar/
https://github.com/leplatrem/Routina

**** Frontend thoughts
:PROPERTIES:
:PREFIX_OBJ_ID: 1ee4c9b2-6d0f-4400-9211-dd5eb0f6c0f6
:PREFIX_OBJ_VERSION: 1504545916
:END:
JS frontend is insane.

https://github.com/facebook/react  
https://github.com/developit/preact
https://github.com/angular/angular - 27000 - Too complicated.
https://github.com/meteor/meteor
https://github.com/emberjs/ember.js/
https://github.com/apollographql/apollo-client
https://github.com/vuejs/vue
https://github.com/MithrilJS/mithril.js - 
https://github.com/knockout/knockout - 8400 - MVVM
https://github.com/sveltejs/svelte - 5100 - compile time
https://github.com/turbolinks/turbolinks - 4000
https://github.com/unpoly/unpoly - 139
https://github.com/Polymer/polymer - 18000 - No idea what web components are.
https://github.com/zeit/next.js/ - 16700 - Server rendered react? Already have backend.
https://cycle.js.org/ - 


**** DONE Learning hyperapp to build a PWA/SPA
CLOSED: [2017-09-01 Fri 10:16]
:PROPERTIES:
:PREFIX_OBJ_ID: 25f83815-6b65-47d9-83c9-cd11203119e6
:PREFIX_OBJ_VERSION: 1504545916
:END:
https://github.com/ramda/ramda - hyperapp probably needs something like this
https://github.com/lodash/lodash - or this
https://github.com/hyperapp/hyperapp/issues/244#issuecomment-321145114
https://github.com/hyperapp/hyperapp/blob/master/docs/vdom-events.md - adapting an external library
https://github.com/hyperapp/hyperapp/issues/251 - testing
***** DONE Need to figure out how to route to the next page - almost done
CLOSED: [2017-08-31 Thu 01:11]
:PROPERTIES:
:PREFIX_OBJ_ID: 8cc73536-e8b2-4b73-b8bd-f301f0836850
:PREFIX_OBJ_VERSION: 1504545916
:END:
***** DONE Try to add kinto - mixin necessary?
CLOSED: [2017-08-31 Thu 23:37]
:PROPERTIES:
:PREFIX_OBJ_ID: 212f7942-e4e5-4f49-aa4d-aed1b3688e34
:PREFIX_OBJ_VERSION: 1504545916
:END:
** MVP2
:PROPERTIES:
:PREFIX_OBJ_ID: 05dd8759-e124-420d-93c4-a3ac4cc7cb0c
:PREFIX_OBJ_VERSION: 1504545916
:END:
Last state:
With great regret, moved phx to kinto. Massive refactor needed to not expose the data layer, copy and paste everywhere to get things working. Performance gone to hell also, for the hopes that the kinto sync is robust. Regardless, it will only need a rewrite between 100-1000 concurrent users depending on how expensive the sync is and that means it will need 5x-10x actual users. All to avoid having to write a sync library and figure out indexeddb. 

This stage looking to sync from server to local disk cleanly and a functional agenda. 

*** DONE Thoughts
CLOSED: [2017-09-01 Fri 17:47]
:PROPERTIES:
:PREFIX_OBJ_ID: 4b74dbe6-fa86-4e21-8388-02b9c1ee60ac
:PREFIX_OBJ_VERSION: 1504545916
:END:
Need to clearly dilineate what happens server-side vs client-side. If items are being collaborated on, could open a websocket and make a lock for it. 
Comments - are they a separate system or do we write into the same schema?
Offline - editing is based on whether they are personal documents or not. Need a lock for shared. If go offline, warn that may have to merge conflicts or save duplicate version, but can continue editing.
Binpacking - does the client do it or the server?
If a person is involved in 50 objects, some public, delegated, some private. 
How do comments work? Client can connect to the backend system for comments, but what is real-time, and what is cached?  

Kinto requires bucket + collection level for anything. Specific buckets for fetching. In fact, if a document is a collection, then already have problems creating an agenda. Need to fetch all records in multiple collections, store them, build an agenda.  

Will be multiple calls to fetch unless we overlay our own queries into the database or maybe write a plugin.
  - https://github.com/Kinto/kinto-changes
This, however, won't help with changes. 

- Sync multiple collections. That sucks.
- Make a document a record. Then will have to parse and create the agenda each time. That sucks.
- Have tasks be replicated into an inbox bucket for a user. This doesn't really work except for maybe 2-way.  
- Build a custom offline cache and replication. Need to replicate everything that a user has access to, not just by bucket or collection. That sucks.
- Instead of each document being a collection, have a document collection and an object collection. Get a full list of objects to build an agenda. Ignore anything about a document. When sharing, can move the object into a shared bucket location and can still have reference to it? No, will have build problem again. 
- A dedicated group for collaboration with org-mode could have a bucket with group perms. After that, each can take objects offline, work, change state, etc.
- Move permissions directly onto the object itself.
- All objects for all users are in a single collection (could be sharded).
- Team-org-mode. Team/group has a bucket with two collections called documents and objects. Have a personal bucket. For each bucket, dosync. Personal bucket has agenda - which has metadata about the real object - title + location. Actually, can just build the agenda off of this without the sync. An object needs an "assigned" field also.
- Product usage. No one is going to partially share a document. The atomic unit for collaboration is the document, not the object. If anything, an object and children should be able to be moved to another document, with a reference back if necessary. Kinto does sharding by buckets => can represent a group. No one would share a subtree and get comments.
- Are comments objects? For instance, a collection of these objects can also represent a forum thread. A comment could be represented by a headline. Could put comments into their own collection? Maybe want to turn comments into objects. 
  
*** DONE Conclusion
CLOSED: [2017-09-01 Fri 18:01]
:PROPERTIES:
:PREFIX_OBJ_ID: 0453b393-cf0e-4496-a126-2b4610181583
:PREFIX_OBJ_VERSION: 1504545916
:END:
1) Single user productivity 
   - agenda
   - notifications
   - capture
   - dumb server, smart client, bin-packing, etc. done in js
2) Collaboration -  Kinto can go pretty far with team/personal buckets with collections of doc + objects.
   - Each group is represented by a bucket. Can be sharded. 
   - Can build agenda - need to resolve over all buckets.
   - Can share documents / move documents / create documents from object subtrees if necessary.
   - Locking for editing documents online via websocket
   - Can shared and assign tasks by fetch from multiple buckets/collections.
   - External contributors also work by adding to a single group. All hierarchy needs to be done via bucket-id or secondary table.
   - Moving groups from public to private - offline stuff would still exist, but could remove keys from keychain?
   - Syncing multiple buckets for sharing allows interesting E2E encryption possibilities.
   - Search - do we do it in the browser if everything is encrypted - depends on transform on sync + indexeddb performance

*** DONE Braindump - Elixir to Kinto
CLOSED: [2017-09-02 Sat 17:59]
:PROPERTIES:
:PREFIX_OBJ_ID: 0a4420ec-ed11-476e-bb26-855e8aef6770
:PREFIX_OBJ_VERSION: 1504545916
:END:
    :LOGBOOK:
    CLOCK: [2017-09-01 Sat 22:30]--[2017-09-02 Sat 00:27] =>  1:57
    CLOCK: [2017-09-01 Fri 20:24]--[2017-09-01 Fri 20:49] =>  0:25
    :END:

Logged into a session:
http://localhost:4000/sessions/new
http://localhost:4000/sessions/ef73a51a0770908c273ba7f20c6b6c308225c708d76981f18cf3d07a5f98

Need some sort of token to be able to write to kinto appropriately.
Stick with basicauth and use userid:sometoken to authorize against kinto. That's as static as can get. Can't use email since they might want to change it. Kinto auths with user:password for basic auth.  
Not in the mood to implement 3-legged auth with bearer tokens:
http://docs.kinto-storage.org/en/stable/tutorials/authentication-github.html
"The user id github:<username> can now be used in permissions definitions. It is much more convenient than Basic Auth identifiers!"

So no direct access to kinto from the client without having a mechanism to fetch the userid from elixir server.
4-step auth - Somehow client authorizes against kinto 3-legged, kinto looks up the uuid from server.

Experimental accounts api:
http://docs.kinto-storage.org/en/stable/api/1.x/accounts.html

At what point is it faster to write offline replication handler for indexeddb than muck with kinto?
Or just write into kinto schema directly with ecto? 
kinto.js replication needs a user/password. Login normally, use user_id as token which can be used on sync. If not proxied, can steal all the data from kinto directly on losing the user token or kinto token. The whole point of nopassword was not to be having these secrets. 

- Need the server and the client to both be able to write into kinto.
- Another option is the client also does the parsing and there is no server at all.

https://github.com/standardnotes/web/blob/master/app/assets/javascripts/app/services/syncManager.js

*** DONE Elixir to Kinto
CLOSED: [2017-09-02 Sat 17:36]
:PROPERTIES:
:PREFIX_OBJ_ID: 0f902f85-c65b-43f7-8de8-5628bf1d8caf
:PREFIX_OBJ_VERSION: 1504545916
:END:
    :LOGBOOK:
    CLOCK: [2017-09-02 Sat 15:00]--[2017-09-02 Sat 17:30] =>  2:30
    CLOCK: [2017-09-02 Sat 13:20]--[2017-09-02 Sat 14:23] =>  1:03
    CLOCK: [2017-09-02 Sat 12:00]--[2017-09-02 Sat 13:10] =>  1:10
    CLOCK: [2017-09-02 Sat 11:17]--[2017-09-02 Sat 11:47] =>  0:30
    CLOCK: [2017-09-02 Sat 10:30]--[2017-09-02 Sat 11:16] =>  0:46
    CLOCK: [2017-09-02 Sat 10:05]--[2017-09-02 Sat 10:30] =>  0:25
    CLOCK: [2017-09-02 Sat 09:35]--[2017-09-02 Sat 10:00] =>  0:25
    CLOCK: [2017-09-02 Sat 09:05]--[2017-09-02 Sat 09:30] =>  0:25
    :END:

#+BEGIN_SRC shell :results output
    http GET "http://localhost:8888/v1/buckets/default/collections/documents/records/someid" --auth kinto_token:de4927d9-a099-4ec8-bb99-4f69888acb34
#+END_SRC

#+RESULTS:
: {"errno":110,"code":404,"details":{"id":"someid","resource_name":"record"},"error":"Not Found"}

*** DONE Set constant user_hmac_secret
CLOSED: [2017-09-02 Sat 18:00]
:PROPERTIES:
:PREFIX_OBJ_ID: abecfc61-94a9-4836-b5ad-75850027f589
:PREFIX_OBJ_VERSION: 1504545916
:END:
$ cat kinto.env 
KINTO_STORAGE_BACKEND=kinto.core.storage.postgresql
KINTO_STORAGE_URL=postgres://postgres:postgres@10.0.2.99/kinto
MULTIAUTH_POLICIES=basicauth
KINTO_EXPERIMENTAL_PERMISSIONS_ENDPOINT=true
KINTO_PERMISSION_BACKEND=kinto.core.permission.postgresql
KINTO_PERMISSION_URL=postgres://postgres:postgres@10.0.2.99/kinto
KINTO_USERID_HMAC_SECRET=not_really_a_secret
KINTO_BATCH_MAX_REQUESTS=10000

*** DONE Security model for kinto and replication
CLOSED: [2017-09-03 Sun 01:17]
:PROPERTIES:
:PREFIX_OBJ_ID: 4cefa8ce-f9cf-447d-b07e-f8421a587fbe
:PREFIX_OBJ_VERSION: 1504545916
:END:
- Access to kinto only through phx.
  - if not, need to verify 3rd party github:<username> as identifier for kinto auth + Repeat for phx auth 
  - phx directly to postgres 
- Must be authenticated for api access.
- User forgery prevented by phx signed session cookies.
- Rewrites the header from the client and enforces the authorization header to be only which is the session cookie.

Other pros - abstracting out the data layer, could be replaced later.

Server-writes - if write directly from phx to postgres in kinto schema, need to know what buckets or need to implement custom uuid generation. 
**** DONE Setup a path for a proxy and rewrite any request headers with basic auth info
CLOSED: [2017-09-02 Sat 21:46]
:PROPERTIES:
:PREFIX_OBJ_ID: cc5988bb-1e69-4b96-a392-3fbe327b382a
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-09-02 Sat 18:00]--[2017-09-02 Sat 21:46] =>  3:46
     :END:
**** DONE Change client url
CLOSED: [2017-09-03 Sun 01:17]
:PROPERTIES:
:PREFIX_OBJ_ID: f6ed03d4-b3d7-4d20-ac20-6303ce389463
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-09-02 Sun 22:21]--[2017-09-03 Sun 01:21] =>  3:00
     :END:
Missed a spot. Kinto.js cannot send a request out without knowing the cookie. The cookie is set to http-only. Ergo - kinto cannot access cookie, ergo - it is really secure.  
"<html> <head> <script> fetch('/bla, { credentials: 'same-origin' }) </script> </head> </html>" works.

https://developer.mozilla.org/en-US/docs/Web/API/Request/mode
https://stackoverflow.com/questions/30013131/how-do-i-use-window-fetch-with-httponly-cookies-or-basic-auth
https://github.com/github/fetch
kinto-http.js has a bug that it doesn't send the credentials.

*** DONE Authorization
CLOSED: [2017-09-03 Sun 01:25]
:PROPERTIES:
:PREFIX_OBJ_ID: af00f2f5-679c-4840-8562-8ff49e029fc7
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE User security investigation
CLOSED: [2017-09-01 Fri 21:30]
:PROPERTIES:
:PREFIX_OBJ_ID: f10aaf77-0f7e-406c-b0ee-8ef38e93f9f5
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-09-01 Fri 20:50]--[2017-09-01 Fri 21:30] =>  0:40
     :END:
- Phoenix by default signs session cookie with secret_key_base
- Can also encrypt the cookie completely
- https://elixirforum.com/t/how-is-phoenix-token-different-from-jwt/2349/5
- https://elixirforum.com/t/phoenix-token-encryption/3123
**** DONE Kinto proxying
CLOSED: [2017-09-03 Sun 01:25]
:PROPERTIES:
:PREFIX_OBJ_ID: 550dbeb1-e624-4b38-9099-e9239670bcb4
:PREFIX_OBJ_VERSION: 1504545916
:END:

*** Patch kinto-http.js
:PROPERTIES:
:PREFIX_OBJ_ID: 1cba1049-da0d-415b-ad2f-966ee8a0d2ff
:PREFIX_OBJ_VERSION: 1504545916
:END:

line 164 of src/http.js - setting default credentials to same-origin should fix it
  async request(url, request = { headers: {} }, options = { retry: 0 }, credentials = 'same-origin') {
    // Ensure default request headers are always set                            
    request.headers = { ...HTTP.DEFAULT_REQUEST_HEADERS, ...request.headers };  
    request.credentials = credentials;          

*** DONE Add REST API for sync to/from emacs
CLOSED: [2017-09-03 Sun 21:14]
:PROPERTIES:
:PREFIX_OBJ_ID: aa0eebb0-5ef2-48f9-a7ed-faf1a4c44985
:PREFIX_OBJ_VERSION: 1504545916
:END:
Doing an api endpoint only that is for curl / api token. Client view for upload comes later and probably in PWA. [[Upload UI]] 
Client will periodically need to sync documents and objects collections.
**** DONE Add api key to plug
CLOSED: [2017-09-03 Sun 10:38]
:PROPERTIES:
:PREFIX_OBJ_ID: 4ccf8c3b-ff34-4a19-ae24-5cd1f92c08c3
:PREFIX_OBJ_VERSION: 1504545916
:END:
      :LOGBOOK:
      CLOCK: [2017-09-03 Sun 10:00]--[2017-09-03 Sun 10:38] => 0:38
      :END:

#+BEGIN_SRC shell :results output
#    curl -H "x-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34" -H "x-api-key:fail" "http://localhost:4000/api/v1" 
    curl -H "x-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34" -H "x-api-key:somekey" "http://localhost:4000/api/v1/documents" 
#+END_SRC

#+RESULTS:
: {"data":[{"name":"/tmp/plug-1504/multipart-1504474364-875480956313730-1","id":"bad5ed41-e053-4f57-a66b-d30df6edce35"},{"name":"/tmp/plug-1504/multipart-1504474293-102208735700548-2","id":"0072d402-55f4-4e83-8657-b8e09f73f25f"},{"name":"/tmp/plug-1504/multipart-1504474253-149974857867695-1","id":"d7d1eaf7-d106-49b6-a6f3-42d0f908f0b6"},{"name":"/tmp/plug-1504/multipart-1504474221-746897423043180-2","id":"50f98993-8eec-4541-ae72-dc32c28bc56a"},{"name":"/tmp/plug-1504/multipart-1504473279-701812867137179-2","id":"256b079d-b56c-4b39-aad5-36efec30a910"}]}


**** DONE fix that api + session should get same results
CLOSED: [2017-09-03 Sun 14:42]
:PROPERTIES:
:PREFIX_OBJ_ID: 69168924-85e1-4393-aedf-cb58d167f666
:PREFIX_OBJ_VERSION: 1504545916
:END:
      :LOGBOOK:
      CLOCK: [2017-09-03 Sun 11:00]--[2017-09-03 Sun 14:42] => 3:42
      :END:
#+BEGIN_SRC shell :results output
#    curl -H "x-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34" -H "x-api-key:fail" "http://localhost:4000/api/v1" 

# access to kinto is only through session cookie, not api_key?
# curl -X POST -d "test" http://localhost:4000/v1/buckets/default/collections/documents/records -H 'Cookie: _ttl_key=SFMyNTY.g3QAAAADbQAAAAtfY3NyZl90b2tlbm0AAAAYcXZ4VEdicHB0QXNJK0VBaEJreFNFUT09bQAAAAxjdXJyZW50X3VzZXJtAAAAF3Rlc3R1c2VyQGZ4bWFuaWZvbGQuY29tbQAAAAd1c2VyX2lkbQAAACRkZTQ5MjdkOS1hMDk5LTRlYzgtYmI5OS00ZjY5ODg4YWNiMzQ._OzavlEQsF4VR-N9iU-Poj2fX3whC1FpVvpxSsXue48'
#    echo '{"data": {"name": "tmpfile.org" }}' | http POST http://localhost:8888/v1/buckets/default/collections/documents/records --auth user1:pass1

#    curl -H "x-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34" -H "x-api-key:somekey" "http://localhost:4000/api/v1/documents" 
#    | http "x-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34" "x-api-key:somekey" "http://localhost:4000/api/v1/documents" 
    http GET http://10.0.0.175:4000/v1/buckets/default/collections/tasks/records X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
#+END_SRC

The api auth and the session auth now work and give same access.
Need to be able to upload a file to the api endpoint and have it imported

**** DONE import endpoint (create)
CLOSED: [2017-09-03 Sun 21:09]
:PROPERTIES:
:PREFIX_OBJ_ID: 2023c827-e8b2-4419-b413-85be17cc8249
:PREFIX_OBJ_VERSION: 1504545916
:END:
#+BEGIN_SRC shell :results output
  #    http GET http://10.0.0.175:4000/v1/buckets/default/collections/documents/records X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
   #   http GET http://10.0.0.175:4000/api/v1/documents X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
  http --form POST http://10.0.0.175:4000/api/v1/documents X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey file@README.org
#+END_SRC
#+RESULTS:
: {"data":[{"name":"/tmp/plug-1504/multipart-1504498094-716839023744787-2","id":"9dafb409-ab95-43ea-a774-ae31d361be5f"}]}
**** DONE Export endpoint (show)
CLOSED: [2017-09-03 Sun 21:09]
:PROPERTIES:
:PREFIX_OBJ_ID: d335d8ab-dfc7-473f-8a52-ca64752ca327
:PREFIX_OBJ_VERSION: 1504545916
:END:

#+BEGIN_SRC shell :results output
#    http GET http://10.0.0.175:4000/v1/buckets/default/collections/documents/records X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
 #   http --form POST http://10.0.0.175:4000/api/v1/documents X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey file@README.org
#    http GET http://10.0.0.175:4000/api/v1/documents X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
    http GET http://10.0.0.175:4000/api/v1/documents/9dafb409-ab95-43ea-a774-ae31d361be5f X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
#+END_SRC

**** DONE delete document (delete)
CLOSED: [2017-09-03 Sun 21:09]
:PROPERTIES:
:PREFIX_OBJ_ID: 9b479567-032b-47f3-958a-61efe0db5cab
:PREFIX_OBJ_VERSION: 1504545916
:END:
      :LOGBOOK:
      CLOCK: [2017-09-03 Sun 20:15]--[2017-09-03 Sun 21:09] =>  0:54
      :END:
#+BEGIN_SRC shell :results output
#    http GET http://10.0.0.175:4000/v1/buckets/default/collections/documents/records X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
 #   http --form POST http://10.0.0.175:4000/api/v1/documents X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey file@README.org
#    http GET http://10.0.0.175:4000/api/v1/documents X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
    #http DELETE http://10.0.0.175:4000/api/v1/documents/0072d402-55f4-4e83-8657-b8e09f73f25f X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
    #http DELETE http://10.0.0.175:4000/api/v1/documents/d7d1eaf7-d106-49b6-a6f3-42d0f908f0b6 X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
    #http DELETE http://10.0.0.175:4000/api/v1/documents/50f98993-8eec-4541-ae72-dc32c28bc56a X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
    http DELETE http://10.0.0.175:4000/api/v1/documents/256b079d-b56c-4b39-aad5-36efec30a910 X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
#+END_SRC

#+RESULTS:

**** DONE User security
CLOSED: [2017-09-03 Sun 09:03]
:PROPERTIES:
:PREFIX_OBJ_ID: 94f782d5-23d0-415b-9cb4-6326ef00a75b
:PREFIX_OBJ_VERSION: 1504545916
:END:

**** DONE Need api_token field - forget having a separate table for now
CLOSED: [2017-09-03 Sun 14:39]
:PROPERTIES:
:PREFIX_OBJ_ID: cfef3004-d4c3-41b7-8fd8-09d0b8cdcd84
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** DONE Import/Export Bugs
CLOSED: [2017-09-04 Mon 01:07]
:PROPERTIES:
:PREFIX_OBJ_ID: 2cdb3dea-b686-4690-97fc-bdaa8bffb4a3
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE scheduled_date_range, scheduled_time_interval not written to db
CLOSED: [2017-08-19 Sat 22:43]
:PROPERTIES:
:PREFIX_OBJ_ID: 3d52e664-26e9-4627-a63b-7c0fae0d7974
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE Regenerate org-file - scheduled date - the second date of the range is missing
CLOSED: [2017-09-04 Mon 01:07]
:PROPERTIES:
:PREFIX_OBJ_ID: bfd0d667-74ab-4d09-81c8-0281b79dbee2
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-09-03 Sun 23:06]--[2017-09-04 Mon 01:07] =>  2:01
     :END:
[[file:~/repos/self/ttl/lib/ttl/parse/export.ex::defp%20db_date_to_string(date,%20bracket,%20time_interval,%20date_range,%20repeat_interval%20)%20do][fix it here]]
*** DONE Sync - export with ids
CLOSED: [2017-09-04 Mon 10:51]
:PROPERTIES:
:PREFIX_OBJ_ID: ca8e18b8-5bd4-48d8-b54a-f7e5faffac74
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** DONE Recursive sync
CLOSED: [2017-09-04 Mon 14:55]
:PROPERTIES:
:PREFIX_OBJ_ID: df7fb446-ae7a-4f50-be58-25632395fa1b
:PREFIX_OBJ_VERSION: 1504549576
:END:
Started testing this manually with python sync client
Had to actually compare the actual objects on the sync since no local knowledge of what changed.
It seems to only be updating the properties that we've put into the file correctly without screwing up the db.
*** DONE Recursive sync testing
CLOSED: [2017-09-04 Mon 14:54]
:PROPERTIES:
:PREFIX_OBJ_ID: 26194598-0eab-44c0-a9e4-1b7f03ed095c
:PREFIX_OBJ_VERSION: 1504545916
:END:
:LOGBOOK:
CLOCK: [2017-09-04 Mon 11:00]--[2017-09-04 Mon 14:54] =>  3:54
:END:
Import file
Export file with new ids
Import -> same amount of entries in database
Make change to file - modify vs add new nodes without ids
Export -> same result
*** DONE Sync REST client - python?
CLOSED: [2017-09-04 Mon 15:42]
:PROPERTIES:
:PREFIX_OBJ_ID: f2008494-48e2-4202-8312-175465553819
:PREFIX_OBJ_VERSION: 1504545916
:END:
:LOGBOOK:
CLOCK: [2017-09-04 Mon 08:00]--[2017-09-04 Mon 10:50] =>  2:50
:END:
   http --form POST http://10.0.0.175:4000/api/v1/documents X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey file@README.org

1) Start off with a simple script to do whole files
2) Show api needs options to add id
3) Backups of files synced
   
*** DONE Sync bugs
    CLOSED: [2017-09-04 Mon 19:19]
:PROPERTIES:
:PREFIX_OBJ_ID: 1bc1e75b-457c-4124-9fe6-0e5a037d7ab0
:PREFIX_OBJ_VERSION: 1504577559
:END:
:LOGBOOK:
CLOCK: [2017-09-04 Mon 19:18]--[2017-09-04 Mon 19:19] =>  0:01
CLOCK: [2017-09-04 Mon 18:00]--[2017-09-04 Mon 19:18] =>  1:18
:END:
Document downloaded, nuke the server.
When uploading, the new sync algorithm comparison is wrong, should upload, but skips instead.

*** App - How to move between SPA and PHX?
:PROPERTIES:
:PREFIX_OBJ_ID: 056561e5-a3d0-40d8-aa7d-0c810c8b973c
:PREFIX_OBJ_VERSION: 1504545916
:END:
Or remove all html on PHX? Just have PHX be a pure API. 
*** App - Pre and post syncing data immediately / retries / backoffs
:PROPERTIES:
:PREFIX_OBJ_ID: 4ce23fe4-415e-4028-abbf-2a90d579b100
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** App - How to have multiple pages/routes without going insane.
:PROPERTIES:
:PREFIX_OBJ_ID: 304af833-0523-484e-a033-eac67ea2841e
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** App - Components
:PROPERTIES:
:PREFIX_OBJ_ID: 28874fb3-77d9-4fe0-ac0e-b99ed88495d2
:PREFIX_OBJ_VERSION: 1504545916
:END:
https://github.com/hyperapp/hyperapp/issues/238#issuecomment-310999839
*** App - How to include different files
:PROPERTIES:
:PREFIX_OBJ_ID: 6f7d68ac-ade5-4ee7-875b-4614f786b7c9
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** App - Display agenda :ms.agenda:
:PROPERTIES:
:PREFIX_OBJ_ID: 644bbc5f-7995-4f01-ab01-570a03a6f524
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** UI Display
:PROPERTIES:
:PREFIX_OBJ_ID: c3829cfc-1f7c-489e-9a61-b23123b5f645
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Onclick and onslide events - increment version
:PROPERTIES:
:PREFIX_OBJ_ID: 50862a5d-0a26-43b9-b6a8-3418d6e7c90b
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Onedit - increment version
:PROPERTIES:
:PREFIX_OBJ_ID: f4a1e1ba-8f0b-4f00-b2c4-b9812d76e2e2
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Syncing via - [[file:lib/ttl/parse/import.ex::#%20TODO%20-%20need%20f_last_modified%20from%20disk%20and%20f_last_sync%20times%20to%20do%20this%20properly][f_last_modified and f_last_synced]]
:PROPERTIES:
:PREFIX_OBJ_ID: 89bff9ee-2e4e-418d-9d1d-26492c001db9
:PREFIX_OBJ_VERSION: 1504577559
:END:
*** Pick and schedule things onto agenda :ms.agenda:
:PROPERTIES:
:PREFIX_OBJ_ID: 0a7ae43d-40ee-4546-9119-478e9fa4ba05
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Secondary collection for tags and properties :ms.agenda:
:PROPERTIES:
:PREFIX_OBJ_ID: 7b9809c1-30c5-4713-9cf2-5afdf94a45bd
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :LOGBOOK:
     CLOCK: [2017-09-03 Sun 21:50]--[2017-09-03 Sun 22:15] =>  0:25
     :END:
Now that this is with kinto, will have to be per object - maybe store a secondary collection in a bucket with count
Considering this is in each object, will have to store as an array of str. Can kinto search on that?

Will also need to do this locally in indexeddb . 
https://www.codeproject.com/Articles/744986/How-to-do-some-magic-with-indexedDB

Kinto doesn't seem to be able to do it.
1) subarray in object - doesn't appear to work
2) separated by :, strings in tag array - maybe do to rebuild the file, but doesn't look like the js adapter will do it out of box.
3) separate tags collection - and dealing with referential integrity issues may be the best bet.
   - on import - store the tag as a string. guaranteed to be right. secondary tags collection for finding objects with tags.
[[*test via hash][test via hash]] seems to work for python api. Need to sync it locally and then test via js . Api doesn't look like it supports. 
***** DONE testing kinto
CLOSED: [2017-09-03 Sun 22:58]
:PROPERTIES:
:PREFIX_OBJ_ID: 6b07d942-e974-4f7c-83c4-8887cea72930
:PREFIX_OBJ_VERSION: 1504545916
:END:

****** Testing via array
:PROPERTIES:
:PREFIX_OBJ_ID: 1d26baff-c40c-4fb8-b926-5e4463ef1f43
:PREFIX_OBJ_VERSION: 1504545916
:END:
#+BEGIN_SRC shell :results output
#    http POST http://localhost:8888/v1/buckets/default/collections/tasks/records --auth user2:pass2

#echo '{"data": {"id": "tjtest2" , "description": "tjtest", "status": "TODO", "title": "tjtest", "properties": [], "tags": ["test", "test1", "test2"] }}' | 
#echo '{"data": {"id": "tjtest3" , "description": "tjtest", "status": "TODO", "title": "tjtest", "properties": [], "tags": ["test3", "tag1"] }}' | 
#echo '{"data": {"id": "tjtest4" , "description": "tjtest", "status": "TODO", "title": "tjtest", "properties": [], "tags": ["test4", "tag1"] }}' | 
#echo '{"data": {"id": "tjtest5" , "description": "tjtest", "status": "TODO", "title": "tjtest", "properties": [], "tags": "tag1" }}' | 
echo '{"data": {"id": "tjtest6" , "description": "tjtest", "status": "TODO", "title": "tjtest", "properties": [], "tags": ["tag1"] }}' | 
    http POST http://10.0.0.175:4000/v1/buckets/default/collections/objects/records  X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey

#    http GET "http://10.0.0.175:4000/v1/buckets/default/collections/objects/records?in_tags=tag1" X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey
#http://10.0.0.175:4000/v1/buckets/default/collections/objects/records?tags=[test]
#http://10.0.0.175:4000/v1/buckets/default/collections/objects/records?tags=[]
#http://10.0.0.175:4000/v1/buckets/default/collections/objects/records?tags=[tags1,test3]
#http://10.0.0.175:4000/v1/buckets/default/collections/objects/records?tags=tag1 - 1 record
#http://10.0.0.175:4000/v1/buckets/default/collections/objects/records?tags=[tag1] - 0 records
#http://10.0.0.175:4000/v1/buckets/default/collections/objects/records?in_tags=tag1,test3 - 1 record
#http://10.0.0.175:4000/v1/buckets/default/collections/objects/records?tags=[tag1] - should be 1 record
#http://10.0.0.175:4000/v1/buckets/default/collections/objects/records?tags=["tag1"] - 1 record
#+END_SRC

****** test via hash
:PROPERTIES:
:PREFIX_OBJ_ID: 754d6013-f6f1-4409-b3af-b94ee4f5d762
:PREFIX_OBJ_VERSION: 1504545916
:END:
#+BEGIN_SRC shell :results output
#echo '{"data": {"id": "hash1" , "description": "tjtest", "status": "TODO", "title": "tjtest", "properties": {"STYLE": "habit", "LAST_REPEAT":1234}, "tags": {"tag1":1, "tag3": 1} }}' | 
#echo '{"data": {"id": "hash2" , "description": "tjtest", "status": "TODO", "title": "tjtest", "properties": {"STYLE": "habit", "LAST_REPEAT":1234}, "tags": {"tag1":1, "tag2": 1} }}' | 
echo '{"data": {"id": "hash3" , "description": "tjtest", "status": "TODO", "title": "tjtest", "properties": {"STYLE": "habit2", "LAST_REPEAT":1234}, "tags": {"tagx": 1, "tag2": 1} }}' | 
    http POST http://10.0.0.175:4000/v1/buckets/default/collections/objects/records  X-api-client:de4927d9-a099-4ec8-bb99-4f69888acb34 X-api-key:somekey

#http://10.0.0.175:4000/v1/buckets/default/collections/objects/records?properties.STYLE=habit
#http://10.0.0.175:4000/v1/buckets/default/collections/objects/records?tags.tag1=1
#http://10.0.0.175:4000/v1/buckets/default/collections/objects/records?tags.tag2=1
#+END_SRC

#+RESULTS:
: {"permissions":{"write":["basicauth:09e0334b23e025416bf1836378ad07e2d14488137383f8232ac74987fc1ce4e6"]},"data":{"properties":{"STYLE":"habit2","LAST_REPEAT":1234},"id":"hash3","tags":{"tag2":1,"tagx":1},"status":"TODO","title":"tjtest","description":"tjtest","last_modified":1504513377299}}


**** More complete tests for generate -> regenerate with UUID's
:PROPERTIES:
:PREFIX_OBJ_ID: 12ac98ab-8e85-4d5b-ac5b-65b349763b35
:PREFIX_OBJ_VERSION: 1504545916
:END:

*** Offline test
:PROPERTIES:
:PREFIX_OBJ_ID: 17280cc5-82a8-4e33-858a-76a169604cfe
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Cleanup backlog
:PROPERTIES:
:PREFIX_OBJ_ID: 81781c9f-870e-4a6f-9625-b782ae9fa3f4
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE Bugs with syncing new items show conflicts
CLOSED: [2017-09-04 Mon 18:40]
:PROPERTIES:
:PREFIX_OBJ_ID: 9190ac66-3a08-4863-acd2-d572720978e5
:PREFIX_OBJ_VERSION: 1504575249
:END:
On the initial sync, it is written to kinto as an int. On the resync, the version is written to kinto as a string.
Change parser to read version as int. Good for now.
**** Proper prefix for exported file
:PROPERTIES:
:PREFIX_OBJ_ID: 94e9b908-be40-41cd-9f95-16f4265b86be
:PREFIX_OBJ_VERSION: 1504545916
:END:
./ttl/parse/document.ex:47:      f_maybe_set_var_from_properties_map.(object, "PREFIX_OBJ_ID", :id)
./ttl/parse/document.ex:50:      f_maybe_set_var_from_properties_map.(object, "PREFIX_OBJ_VERSION", :version)
./ttl/parse/document.ex:147:    |> Ttl.Parse.Consolidate.consolidate_objects_to_document(%Document{name: file, metadata: file_metadata, id: file_metadata["PREFIX_DOC_ID"]})
./ttl/parse/export.ex:128:      true ->  ":PREFIX_OBJ_ID: #{id}\n:PREFIX_OBJ_VERSION: #{version}\n"
./ttl/parse/export.ex:156:      "#+PREFIX_DOC_ID:#{doc_id}\n"
**** Make sessions last 10 years, not expire on logout
:PROPERTIES:
:PREFIX_OBJ_ID: 2dd20515-11a6-4cdb-895c-4a4ea0f2d183
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** state may get populated incorrectly if the first word is caps.
:PROPERTIES:
:PREFIX_OBJ_ID: 459ab0b9-159e-4bf7-96b3-76ef3cd0be4b
:PREFIX_OBJ_VERSION: 1504545916
:END:
Doesn't affect export or headline though...it's a bug that is not quite a bug
Essentially, searches for those titles may break .
**** The document collection should also have a userid in upload
:PROPERTIES:
:PREFIX_OBJ_ID: c9f78316-af4f-41ba-870b-0dbf8aab7fa4
:PREFIX_OBJ_VERSION: 1504545916
:END:
Right now kinto doesn't have this concept, just maps to buckets for ownership.
**** name metadata isn't right on import
:PROPERTIES:
:PREFIX_OBJ_ID: 3da61137-c066-4e05-baa9-13b25307ae3e
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Go through each query and make sure error conditions are satisfied.
:PROPERTIES:
:PREFIX_OBJ_ID: 49ce15b4-9b42-4009-b5b9-9b8ed1688b19
:PREFIX_OBJ_VERSION: 1504545916
:END:
[[file:lib/ttl/web/controllers/api_document_controller.ex::def%20delete(conn,%20%25{"id"%20=>%20id})%20do][example]]
**** Go through things.ex and normalize structures/responses?
:PROPERTIES:
:PREFIX_OBJ_ID: 27b618e3-92fd-40e7-bc4f-5376c9fdb1cb
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Fallback controller
:PROPERTIES:
:PREFIX_OBJ_ID: 53c7f6eb-8d1d-4d74-94e2-f270c2f76bef
:PREFIX_OBJ_VERSION: 1504545916
:END:
[[file:lib/ttl/web/controllers/api_document_controller.ex::#%20TODO%20-%20fallback][fallback location]]
[[file:lib/ttl/web/controllers/fallback_controller.ex::#%20TODO%20not%20being%20used%20yet][fallback controller]]
**** kinto token == user id
:PROPERTIES:
:PREFIX_OBJ_ID: 05e5abe2-dd8d-4508-925e-e5a21377c21d
:PREFIX_OBJ_VERSION: 1504545916
:END:
Are we going to have a separate kinto_token? Will the token be available to clients ever?
[[file:lib/ttl/accounts/plug_auth.ex::#%20TODO%20-%20kinto%20token%20==%20user_id][cleanup in auth]]
**** Tests for authorization
:PROPERTIES:
:PREFIX_OBJ_ID: 7b706ae0-ab23-462c-98dd-cc2b5430a41f
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Figure out how to put the SPA on phx
:PROPERTIES:
:PREFIX_OBJ_ID: ff134a71-4107-4291-af26-5dd7d33471a0
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** DONE Why are we treating api auth different from session auth?
CLOSED: [2017-09-03 Sun 14:12]
:PROPERTIES:
:PREFIX_OBJ_ID: 7ec112aa-3fd0-4724-8d33-9de189d364dd
:PREFIX_OBJ_VERSION: 1504545916
:END:
Shouldn't it check if api key
If not, check session key
Merge the two together and give access to everything if moving to SPA.
Regarding kinto, people can put arbitrary data in local indexeddb anyway. 
Kinto token needs to be fixed, that is userid/client_id. If they get api_key or session cookie, they have access. 
**** Refactor data layer and remove copy and paste in import/exports
:PROPERTIES:
:PREFIX_OBJ_ID: 8dabaf9f-a10d-401d-b86d-58b32e892044
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Setup a http pool for kinto
:PROPERTIES:
:PREFIX_OBJ_ID: 84758f14-88ad-4f8b-84c6-44e61fcf3c9a
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Move kinto to https
:PROPERTIES:
:PREFIX_OBJ_ID: f9ec6509-0f69-43e6-a7f9-158c4a0a2010
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Hardcoded localhost
:PROPERTIES:
:PREFIX_OBJ_ID: e7dd4790-9904-4017-b36d-0823f7575770
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Postgres? Remove or refactor and keep for later?
:PROPERTIES:
:PREFIX_OBJ_ID: 5e3b520f-4de6-4bed-be0d-c9c9905c76a3
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Remove all the extra phx routes
:PROPERTIES:
:PREFIX_OBJ_ID: 28238b15-39ca-42ef-b6cb-5fef367cc0d8
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Make an elixir-kinto adapter?
:PROPERTIES:
:PREFIX_OBJ_ID: 23551a8c-0298-4382-8e2c-4f63b762cc22
:PREFIX_OBJ_VERSION: 1504545916
:END:
- new table has userid + kinto token
- connection pool
- return structs

What about logbook?
Need to revamp the schema. 
**** add spec to all functions
:PROPERTIES:
:PREFIX_OBJ_ID: 86754ab7-6153-4131-a373-f53916ec8d51
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** More complex syncing - needed when client becomes more complex
:PROPERTIES:
:PREFIX_OBJ_ID: 91f72942-5676-40cc-a0c0-3029ecf62dbc
:PREFIX_OBJ_VERSION: 1504574498
:END:
**** [[file:lib/ttl/parse/import.ex::#%20TODO%20-%20compare%20the%20document%20also%20as%20it%20contains%20the%20order%20of%20the%20ids][compare document also]]
:PROPERTIES:
:PREFIX_OBJ_ID: 529be40c-fe1b-43cc-a169-046dc0166501
:PREFIX_OBJ_VERSION: 1504577559
:END:
**** sync - calculate the deleted items and remove objects
:PROPERTIES:
:PREFIX_OBJ_ID: 4491c74c-a1e0-4517-8c81-fa3d82eeed81
:PREFIX_OBJ_VERSION: 1504568348
:END:
**** Update the version on the server
:PROPERTIES:
:PREFIX_OBJ_ID: 036eede3-ebc0-44b9-94b6-83bac6c73a8d
:PREFIX_OBJ_VERSION: 1504549576
:END:
Not sure if this will help. We still don't know if we modified an object locally or not. 
*** Notifications
:PROPERTIES:
:PREFIX_OBJ_ID: 279bb6fc-3a9e-4882-8a02-a2dd05c30171
:PREFIX_OBJ_VERSION: 1504545916
:END:
- If these end up having to be via the server, perhaps bin-packing / re-scheduling also on the server.
*** Need to namespace buckets based on org/groupname/id? :ms.shared:
:PROPERTIES:
:PREFIX_OBJ_ID: d557e25c-6fb5-49da-a402-6266db0aec94
:PREFIX_OBJ_VERSION: 1504545916
:END:

*** Bin-packing
:PROPERTIES:
:PREFIX_OBJ_ID: 4c90e670-217e-4f08-9056-bf4504c3cf57
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** User settings
:PROPERTIES:
:PREFIX_OBJ_ID: 4d2da14e-2cf9-4998-8ac1-1c30fb5a7e9a
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Daily review
:PROPERTIES:
:PREFIX_OBJ_ID: 7cae55ad-fc6b-4406-a39f-18f26ed6b2fe
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Weekly review
:PROPERTIES:
:PREFIX_OBJ_ID: aa94c30e-6c23-444d-84c1-0b7ef5b25489
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Connect to phoenix channels - why? Comments/feedback?
:PROPERTIES:
:PREFIX_OBJ_ID: 1b10ae3a-c93c-4ecc-8fb6-ee798848a2c1
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Check for updates of code versions and update notice
:PROPERTIES:
:PREFIX_OBJ_ID: ad2aa3e2-5b64-492e-ac24-f78416cc2467
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** notifications
:PROPERTIES:
:PREFIX_OBJ_ID: 67c1191d-6438-4799-9ac3-946fbeac1e60
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** App - UI Tests
:PROPERTIES:
:PREFIX_OBJ_ID: 02ed58fd-1d92-4e80-80cf-2b3830f3812e
:PREFIX_OBJ_VERSION: 1504545916
:END:
https://github.com/webpro/Automated-SPA-Testing
*** Import/export Tests
:PROPERTIES:
:PREFIX_OBJ_ID: 1132d68f-647a-4613-b88b-e8fd70115c97
:PREFIX_OBJ_VERSION: 1504545916
:END:
Updates
       - An old object (all db counts same)
       - A new object gets added (db count + 1)
       - the new object gets modified (db count same)
** MVPX
:PROPERTIES:
:PREFIX_OBJ_ID: 9282f3e7-02b1-479f-b5b8-900f56983a55
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Sync upgrades, testing, and performance
:PROPERTIES:
:PREFIX_OBJ_ID: c1b9b8a6-5ca8-4711-bfe3-ef072fe6ff52
:PREFIX_OBJ_VERSION: 1504545916
:END:
Upload file -> import -> conflict items -> export -> return {new_file, conflicts, updated, published, etc.)
      - Need to modify the object from ui/db and then test uploads
      - make sure the item that is being updated has same version => last-modify time in unixtime utc. On sync, replace with max(device_time, server_time)
      - Can't use version number. Concurrency - multiple people could have modified the item. Clocks not good enough.
      - Version could be a JSON CRDT to enable merging, but need to make emacs module also
*** Add an editor?
:PROPERTIES:
:PREFIX_OBJ_ID: 4a9e1f1e-95f0-4edf-8778-7615ebb424e1
:PREFIX_OBJ_VERSION: 1504545916
:END:
http://scripting.com/2013/09/16/concordOurGplOutliner
https://github.com/tjheeta/concord

*** Attachments and inline viewing
:PROPERTIES:
:PREFIX_OBJ_ID: 7746eaf9-c86a-4e49-a68a-ce77d4435838
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Inline viewing
:PROPERTIES:
:PREFIX_OBJ_ID: c6c5ea9a-b884-47eb-9dd6-bb4d0a18b7cd
:PREFIX_OBJ_VERSION: 1504545916
:END:
[[file:~/org/jive/main/mako/deploy_flow.png][file:~/org/jive/main/mako/deploy_flow.png]]
:org-toggle-inline-images or c-c, c-x, c-v 

**** Attachments
:PROPERTIES:
:PREFIX_OBJ_ID: 11f69fc5-d8b2-46dc-8053-e1861f69c1c8
:PREFIX_OBJ_VERSION: 1504545916
:END:

*** Server-side rendering - how does this even matter?
:PROPERTIES:
:PREFIX_OBJ_ID: 3bcd143e-c3c4-4a08-96fa-cdcb7a119fe1
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** capture
:PROPERTIES:
:PREFIX_OBJ_ID: 2fa12119-1461-4eb7-925e-d60391cfb8a3
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** bookmarklets directly to server
:PROPERTIES:
:PREFIX_OBJ_ID: febf7f07-0d30-40bb-900f-9bd48708d6cb
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** attachments :ATTACH:
:PROPERTIES:
:PREFIX_OBJ_ID: 1d6e755c-8843-4a5c-be07-ab1bdbf39012
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :PROPERTIES:
     :Attachments: deploy_flow.png developer_access.png
     :ID:       002c1bf3-a3cb-45a2-856a-93f7fbb3e6a0
     :END:
- The directory is actually in ttl/data (based on where this org file is
- http://orgmode.org/manual/Attachments.html
**** pictures and attachments
:PROPERTIES:
:PREFIX_OBJ_ID: 662af498-2928-494c-99dd-f25408639d0d
:PREFIX_OBJ_VERSION: 1504545916
:END:
     :PROPERTIES:
     :ID:       9e0c00b2-4301-4b75-bf4e-a11f4ab31fcb
     :END:
https://stackoverflow.com/questions/17435995/paste-an-image-on-clipboard-to-emacs-org-mode-file-without-saving-it
**** some sort of ifttt integration? send email to an interface and it will go into todo?
:PROPERTIES:
:PREFIX_OBJ_ID: f88ddad2-9363-44e0-bb50-03e3b9b3e7f9
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** parse additional properties for scheduling + contexts + tags
:PROPERTIES:
:PREFIX_OBJ_ID: e745aa9f-19c4-4ff5-910b-521b2ad8bf5c
:PREFIX_OBJ_VERSION: 1504545916
:END:
estimated time
*** Inbox - integration point for externs and updates?
:PROPERTIES:
:PREFIX_OBJ_ID: c15223f2-2f2d-4472-be41-c79519b40778
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Add full calendar?
:PROPERTIES:
:PREFIX_OBJ_ID: 2995a091-f3cb-48d6-8d01-dec83bb91491
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Google calendar / ICS
:PROPERTIES:
:PREFIX_OBJ_ID: b36305ab-3021-4d03-908b-430c9496be52
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Conflict resolution?
:PROPERTIES:
:PREFIX_OBJ_ID: e293e164-3c35-406f-8fcb-52d7808bdc48
:PREFIX_OBJ_VERSION: 1504545916
:END:
- Show conflicts
- Pick versions
- Force upload
*** Capture to different documents
:PROPERTIES:
:PREFIX_OBJ_ID: 1a4b22bf-b3e0-4077-b0eb-b080092d5128
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Set concurrency controls?
:PROPERTIES:
:PREFIX_OBJ_ID: 42ba485a-27bd-4177-b695-7eab3c7280f3
:PREFIX_OBJ_VERSION: 1504545916
:END:
- Will need to pass on headers in KintoPlugProxy
*** Upload UI
:PROPERTIES:
:PREFIX_OBJ_ID: c5ecf787-a801-44d2-9688-838c31429414
:PREFIX_OBJ_VERSION: 1504545916
:END:
Need a single interface that is accessible through PWA to import/export.
The organization of this is getting a bit messy. 
The client is based on being offline first and using kinto.
If the client wants to import a document, where is the view? 
To import:
1) User posts the file somewhere (api or endpoint)
   - Curl -> api token and result
   - PWA -> already have the session cookie, so have access to everything. 
     - Need a view for documents and have an upload button. 
     - state tree gets loaded from indexeddb, includes the document and all the objects
   - Phx -> Easy, but how would this get synced back to the client? Super-weird?
2) File gets parsed and written to kinto
3) Kinto synchronizes the data to the client for viewing
**** Document api needs to have multiple options
:PROPERTIES:
:PREFIX_OBJ_ID: d4d845bf-bdb9-4b49-9b05-41d8c556d4d9
:PREFIX_OBJ_VERSION: 1504545916
:END:
- force upload
- name
- if no file, just create a blank doc?
*** Autocomplete tags and documents
:PROPERTIES:
:PREFIX_OBJ_ID: 2473d79b-6515-45c6-a857-71b89c7ae17e
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Production Authorization
:PROPERTIES:
:PREFIX_OBJ_ID: 314840b3-22cf-40e6-95bd-831f09a95443
:PREFIX_OBJ_VERSION: 1504545916
:END:
    :LOGBOOK:
    CLOCK: [2017-09-01 Fri 21:30]--[2017-09-01 Fri 22:48] =>  1:18
    :END:

https://github.com/sakurity/securelogin
http://inaka.net/blog/2016/07/27/passwordless-login-with-phoenix/
https://medium.com/the-many/how-we-built-passwordless-authentication-with-auth0-and-elixir-phoenix-ea508c9f3490
How can you check if a token is revoked without going to the db?
Have a global counter of revoke, token has a counter element, if it is less than counter, it needs re-auth. Very fragile under load.

**** Need api/bucket tokens for rest api
:PROPERTIES:
:PREFIX_OBJ_ID: bba5fcda-5672-4c17-bdc5-4052ea2ea42a
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Per device tokens or just revoke all and re-create current?
:PROPERTIES:
:PREFIX_OBJ_ID: 37ed1092-eced-41e9-a74b-160312f90ce9
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** How to revoke a user/device?
:PROPERTIES:
:PREFIX_OBJ_ID: dda405ca-0168-4766-ab75-14e437b39703
:PREFIX_OBJ_VERSION: 1504545916
:END:
Refresh token in db that is verified on refresh - 30 days. Just store that many days of revoke tokens on each refresh token use.
Auth token regenerate every 15 min 
if don't use tokens and just use a session in ets/dets, still won't work properly with long-session needing to be in mem or db. keeping n-days of revocation tokens better than keeping all auth tokens.   
**** Ensure session cookie containing token is "HttpOnly" "Secure" (https)
:PROPERTIES:
:PREFIX_OBJ_ID: 0c6ff003-7017-4951-ad5d-7abe5198d569
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Cookie expiry far into the future.
:PROPERTIES:
:PREFIX_OBJ_ID: c8b5be7d-db44-4a26-8387-c629e9a37ead
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** Cookies are fully encrypted
:PROPERTIES:
:PREFIX_OBJ_ID: 5b9dd721-9c57-4d7b-a3f8-ee57f634b6d3
:PREFIX_OBJ_VERSION: 1504545916
:END:
**** CSRF protection
:PROPERTIES:
:PREFIX_OBJ_ID: 2321f190-3543-4b4a-850c-74a1e68057a3
:PREFIX_OBJ_VERSION: 1504545916
:END:
#    plug :protect_from_forgery
Right now are avoiding XSS attacks with http-only cookies and using credentials
CSRF is still possible. With the plug protect_from_forgery, it will write it into the session.
Need to modify one of the plugs to write it into the header request, if not already there. 

http://www.redotheweb.com/2015/11/09/api-security.html

   :plug_session => %{"_csrf_token" => "LLT2BMJp7DiKlDc/DQdsMw==",
     "current_user" => "a@b.com",
     "user_id" => "de4927d9-a099-4ec8-bb99-4f69888acb34"},

https://github.com/elixir-plug/plug/issues/504

**** websocket security
:PROPERTIES:
:PREFIX_OBJ_ID: 0f0cfa12-5194-4b94-916e-deb72720bede
:PREFIX_OBJ_VERSION: 1504545916
:END:
- read assets/js/socket.js
- https://hexdocs.pm/phoenix/Phoenix.Token.html
- https://medium.com/caspertechteam/securing-websockets-in-elixir-770cbd2da043
- http://blog.stratumsecurity.com/2016/06/13/websockets-auth/
- Send the token under bearer?

Each document in document collection
Each object is now a record in objects collection. 
Personal buckets are auto-synced.
*** Assistant - location based
:PROPERTIES:
:PREFIX_OBJ_ID: 8dfadc39-71c2-4a11-9eb0-c9d13b241ee5
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Elisp client - update versions / conflict resolution, local changes :ms.faraway:
:PROPERTIES:
:PREFIX_OBJ_ID: d5895ecd-6de4-4132-8488-0820467f3158
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** Encryption per bucket
:PROPERTIES:
:PREFIX_OBJ_ID: 3e461bbc-2bfe-4301-8d2c-c35775bc9cc5
:PREFIX_OBJ_VERSION: 1504545916
:END:
Need to have a master password. Each user has a keychain for all accessible buckets. The buckets get synced locally, decrypted as necessary, and stuff built. Re-keying will be massively painful. 
*** Security
:PROPERTIES:
:PREFIX_OBJ_ID: 7d945e20-b230-478c-961b-eb89436b0132
:PREFIX_OBJ_VERSION: 1504545916
:END:
https://turtlapp.com/
https://standardnotes.org/blog/7/announcing-our-2017-security-audit-results
https://github.com/standardfile
*** Security - Moving groups from public to private - offline stuff would still exist.
:PROPERTIES:
:PREFIX_OBJ_ID: f80700ae-b7fc-4ce1-8f50-0181f489e2a6
:PREFIX_OBJ_VERSION: 1504545916
:END:
*** CRDT editing :ms.shared:
:PROPERTIES:
:PREFIX_OBJ_ID: 50c1bc91-3376-47ee-a3d2-6d47ec35fc69
:PREFIX_OBJ_VERSION: 1504545916
:END:
- https://github.com/xwiki-contrib/chainpad
- https://hal.archives-ouvertes.fr/inria-00336191/
- https://news.ycombinator.com/item?id=12303100
- https://pages.lip6.fr/Marek.Zawirski/papers/SwiftCloud-RR-8347.pdf
* Scratch
:PROPERTIES:
:PREFIX_OBJ_ID: 6b7a1a14-af89-4ab5-babd-186a855b4c51
:PREFIX_OBJ_VERSION: 1504545916
:END:

#+BEGIN_SRC elixir :results output
2 + 2
#+END_SRC

* clocktable
:PROPERTIES:
:PREFIX_OBJ_ID: 1d103559-59c8-400e-90ce-d4080062ff2d
:PREFIX_OBJ_VERSION: 1504545916
:END:
#+BEGIN: clocktable :maxlevel 5 :scope file
#+CAPTION: Clock summary at [2017-09-04 Mon 01:07]
| Headline                                         | Time       |          |         |       |      |
|--------------------------------------------------+------------+----------+---------+-------+------|
| *Total time*                                     | *3d 14:56* |          |         |       |      |
|--------------------------------------------------+------------+----------+---------+-------+------|
| Ttl                                              | 3d 14:56   |          |         |       |      |
| \_  MVP1                                         |            | 2d 12:56 |         |       |      |
| \_    import/export to api.                      |            |          | 1d 4:50 |       |      |
| \_      consolidate sections                     |            |          |         |  2:07 |      |
| \_      Need to fix the planning parser to...    |            |          |         |  0:25 |      |
| \_      implement db schema                      |            |          |         |  1:15 |      |
| \_      write to database                        |            |          |         | 11:06 |      |
| \_        Make it into a function                |            |          |         |       | 0:30 |
| \_        Make a solid decision on what to do... |            |          |         |       | 1:03 |
| \_        Parse and cast the dates               |            |          |         |       | 4:58 |
| \_      Need to parse the file metadata          |            |          |         |  1:35 |      |
| \_      regenerate file from database - with...  |            |          |         |  4:59 |      |
| \_      Properties - parse, store, and write     |            |          |         |  1:47 |      |
| \_      Add version and id into regenerated...   |            |          |         |  0:24 |      |
| \_      Read file uuid from file to pull objects |            |          |         |  2:07 |      |
| \_      Start of file exception                  |            |          |         |  0:25 |      |
| \_      Ensure data gets updated on change       |            |          |         |  0:08 |      |
| \_      make an interval data structure for...   |            |          |         |  1:15 |      |
| \_      Parse the schedule properly into the...  |            |          |         |  1:17 |      |
| \_    Cleanup                                    |            |          |    3:19 |       |      |
| \_      Refactor parse                           |            |          |         |  3:19 |      |
| \_    POC - display UI for agenda                |            |          | 1d 4:47 |       |      |
| \_      Kinto                                    |            |          |         |  4:48 |      |
| \_  MVP2                                         |            | 1d 2:00  |         |       |      |
| \_    Braindump - Elixir to Kinto                |            |          |    2:22 |       |      |
| \_    Elixir to Kinto                            |            |          |    7:14 |       |      |
| \_    Security model for kinto and replication   |            |          |    6:46 |       |      |
| \_      Setup a path for a proxy and rewrite...  |            |          |         |  3:46 |      |
| \_      Change client url                        |            |          |         |  3:00 |      |
| \_    Authorization                              |            |          |    0:40 |       |      |
| \_      User security investigation              |            |          |         |  0:40 |      |
| \_    Add REST API for sync to/from emacs        |            |          |    5:14 |       |      |
| \_      Add api key to plug                      |            |          |         |  0:38 |      |
| \_      fix that api + session should get...     |            |          |         |  3:42 |      |
| \_      delete document (delete)                 |            |          |         |  0:54 |      |
| \_    Import/Export Bugs                         |            |          |    2:01 |       |      |
| \_      Regenerate org-file - scheduled date...  |            |          |         |  2:01 |      |
| \_    Secondary collection for tags              |            |          |    0:25 |       |      |
| \_    Production Authorization                   |            |          |    1:18 |       |      |
#+END:
